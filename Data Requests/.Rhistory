colnames(jcdSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","JuvColDen","SE_JuvColDen","Juv_avp","Juv_seprop","Juv_Abun","Juv_SE_Abun","Juv_CV")
odSP_st<-Calc_Strata(site.data.sp2,"SPCODE","Ave.od");odSP_st=odSP_st[,c.keep2]
colnames(odSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","Ave.od","SE_Ave.od")
rdSP_st<-Calc_Strata(site.data.sp2,"SPCODE","Ave.rd");rdSP_st=rdSP_st[,c.keep2]
colnames(rdSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","Ave.rd","SE_Ave.rd")
clSP_st<-Calc_Strata(site.data.sp2,"SPCODE","Ave.size");clSP_st=clSP_st[,c.keep2]
colnames(clSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","Ave.size","SE_Ave.size")
BLESP_st<-Calc_Strata_Prevalence(site.data.sp2,"SPCODE","BLE");BLESP_st=BLESP_st[,c.keep4]
colnames(BLESP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","BLE","SE_BLE")
AcuteDZSP_st<-Calc_Strata_Prevalence(site.data.sp2,"SPCODE","AcuteDZ");AcuteDZSP_st=AcuteDZSP_st[,c.keep4]
colnames(AcuteDZSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","AcuteDZ","SE_AcuteDZ")
ChronicDZSP_st<-Calc_Strata_Prevalence(site.data.sp2,"SPCODE","ChronicDZ");ChronicDZSP_st=ChronicDZSP_st[,c.keep4]
colnames(ChronicDZSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","ChronicDZ","SE_ChronicDZ")
#Double Check that revised pooling is adding up NH (total sites) correctly
View(acdSP_st)
View(sectors)
#Calculate Island Estimates
acdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","AdColDen","Adpres.abs")
acdSP_is<-acdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AdColDen","SE_AdColDen","CV_D._st")];colnames(acdSP_is)[colnames(acdSP_is)=="CV_D._st"]<-"Adult_CV"
jcdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs")
jcdSP_is<-jcdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_JuvColDen","SE_JuvColDen","CV_D._st")];colnames(jcdSP_is)[colnames(jcdSP_is)=="CV_D._st"]<-"Juv_CV"
odSP_is<-Calc_Domain(site.data.sp2,"SPCODE","Ave.od")
odSP_is<-odSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.od","SE_Ave.od")]
rdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","Ave.rd")
rdSP_is<-rdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.rd","SE_Ave.rd")]
clSP_is<-Calc_Domain(site.data.sp2,"SPCODE","Ave.size")
clSP_is<-clSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.size","SE_Ave.size")]
bleSP_is<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","BLE")
bleSP_is<-bleSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_BLE_Prev","SE_BLE_Prev")]
AcuteDZSP_is<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","AcuteDZ")
AcuteDZSP_is<-AcuteDZSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AcuteDZ_Prev","SE_AcuteDZ_Prev")]
ChronicDZSP_is<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","ChronicDZ")
ChronicDZSP_is<-ChronicDZSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_ChronicDZ_Prev","SE_ChronicDZ_Prev")]
#Calculate Sector Estimates
site.data.sp2$ANALYSIS_SCHEMA<-site.data.sp2$STRATANAME
site.data.sp2$DOMAIN_SCHEMA<-site.data.sp2$BEN_SEC
acdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","AdColDen","Adpres.abs")
acdSP_sec<-acdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AdColDen","SE_AdColDen","CV_D._st")];colnames(acdSP_sec)[colnames(acdSP_sec)=="CV_D._st"]<-"Adult_CV"
jcdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs")
jcdSP_sec<-jcdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_JuvColDen","SE_JuvColDen")];colnames(jcdSP_sec)[colnames(jcdSP_sec)=="CV_D._st"]<-"Juv_CV"
odSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","Ave.od")
odSP_sec<-odSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.od","SE_Ave.od")]
rdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","Ave.rd")
rdSP_sec<-rdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.rd","SE_Ave.rd")]
clSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","Ave.size")
clSP_sec<-clSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.size","SE_Ave.size")]
bleSP_sec<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","BLE")
bleSP_sec<-bleSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_BLE_Prev","SE_BLE_Prev")]
AcuteDZSP_sec<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","AcuteDZ")
AcuteDZSP_sec<-AcuteDZSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AcuteDZ_Prev","SE_AcuteDZ_Prev")]
ChronicDZSP_sec<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","ChronicDZ")
ChronicDZSP_sec<-ChronicDZSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_ChronicDZ_Prev","SE_ChronicDZ_Prev")]
#Merge dataframes together
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
st.data.sp<-Reduce(MyMerge, list(acdSP_st,jcdSP_st,odSP_st,rdSP_st,clSP_st,BLESP_st,AcuteDZSP_st,ChronicDZSP_st))
colnames(st.data.sp)[colnames(st.data.sp)=="ANALYSIS_SCHEMA"]<-"Stratum"
write.csv(st.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_STRATA_Timeseries.csv",row.names=F)
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
is.data.sp<-Reduce(MyMerge, list(acdSP_is,jcdSP_is,odSP_is,rdSP_is,clSP_is,bleSP_is,AcuteDZSP_is,ChronicDZSP_is))
colnames(is.data.sp)[colnames(is.data.sp)=="DOMAIN_SCHEMA"]<-"ISLAND"
write.csv(is.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_ISLAND_Timeseries.csv",row.names=F)
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
sec.data.sp<-Reduce(MyMerge, list(acdSP_sec,jcdSP_sec,odSP_sec,rdSP_sec,clSP_sec,bleSP_sec,AcuteDZSP_sec,ChronicDZSP_sec))
colnames(sec.data.sp)[colnames(sec.data.sp)=="DOMAIN_SCHEMA"]<-"Sector"
write.csv(sec.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_SECTOR_Timeseries.csv",row.names=F)
st.data.sp_esa<-st.data.sp[st.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
st.data.sp_esa<-st.data.sp_esa[,1:17] #subset columns of interest
st.data.sp_esa$DEPTH_BIN<-Generate_DB(st.data.sp_esa) #create a depth bin column
st.data.sp_esa<-st.data.sp_esa[,-c(7,13,14)] #remove more columns
st.data.sp_esa<-left_join(st.data.sp_esa,esa) # join data with esa taxa look up table
st.data.sp_esa<-st.data.sp_esa[,c(1:6,15:17,7:14)] #reorder columns
head(st.data.sp_esa)
esa<-read.csv("T:/Benthic/Data/Lookup Tables/ESACorals_lookup.csv")
st.data.sp_esa<-st.data.sp[st.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
st.data.sp_esa<-st.data.sp_esa[,1:17] #subset columns of interest
st.data.sp_esa$DEPTH_BIN<-Generate_DB(st.data.sp_esa) #create a depth bin column
st.data.sp_esa<-st.data.sp_esa[,-c(7,13,14)] #remove more columns
st.data.sp_esa<-left_join(st.data.sp_esa,esa) # join data with esa taxa look up table
st.data.sp_esa<-st.data.sp_esa[,c(1:6,15:17,7:14)] #reorder columns
head(st.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:9] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa) # join data with esa taxa look up table
is.data.sp_esa<-is.data.sp_esa[,c(1:4,12:13,5:11)] #reorder columns
head(is.data.sp_esa)
sec.data.sp_esa<-sec.data.sp[sec.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
head(is.data.sp)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:13] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa) # join data with esa taxa look up table
head(is.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:13] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa) # join data with esa taxa look up table
is.data.sp_esa<-is.data.sp_esa[,c(1:4,14:15,5:13)] #reorder columns
head(is.data.sp_esa)
st.data.sp_esa<-st.data.sp[st.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
head(st.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:10]
head(is.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:10] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa)
head(is.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:10] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa) # join data with esa taxa look up table
is.data.sp_esa<-is.data.sp_esa[,c(1:4,11:12,5:10)] #reorder columns
head(is.data.sp_esa)
st.data.sp_esa<-st.data.sp[st.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
st.data.sp_esa<-st.data.sp_esa[,1:17] #subset columns of interest
st.data.sp_esa$DEPTH_BIN<-Generate_DB(st.data.sp_esa) #create a depth bin column
head(st.data.sp_esa)
st.data.sp_esa<-st.data.sp[st.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
st.data.sp_esa<-st.data.sp_esa[,1:17] #subset columns of interest
st.data.sp_esa$DEPTH_BIN<-Generate_DB(st.data.sp_esa) #create a depth bin column
st.data.sp_esa<-st.data.sp_esa[,-c(7,13,14)] #remove more columns
st.data.sp_esa<-left_join(st.data.sp_esa,esa) # join data with esa taxa look up table
st.data.sp_esa<-st.data.sp_esa[,c(1:6,15:17,7:14)] #reorder columns
head(st.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
head(is.data.sp_esa)
acdSP_is<-acdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AdColDen","SE_AdColDen","CV_D._st","Y._st","SE_Y._st")]
colnames(acdSP_is)[colnames(acdSP_is)=="CV_D._st"]<-"Adult_CV"
colnames(acdSP_is)[colnames(acdSP_is)=="Y._st"]<-"Adult_Abun"
colnames(acdSP_is)[colnames(acdSP_is)=="SE_Y._st"]<-"Adult_SE_Abun"
jcdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs")
jcdSP_is<-jcdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_JuvColDen","SE_JuvColDen","CV_D._st")]
colnames(jcdSP_is)[colnames(jcdSP_is)=="CV_D._st"]<-"Juv_CV"
colnames(jcdSP_is)[colnames(jcdSP_is)=="Y._st"]<-"Juv_Abun"
colnames(jcdSP_is)[colnames(jcdSP_is)=="SE_Y._st"]<-"Juv_SE_Abun"
acdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","AdColDen","Adpres.abs")
acdSP_is<-acdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AdColDen","SE_AdColDen","CV_D._st","Y._st","SE_Y._st")]
colnames(acdSP_is)[colnames(acdSP_is)=="CV_D._st"]<-"Adult_CV"
colnames(acdSP_is)[colnames(acdSP_is)=="Y._st"]<-"Adult_Abun"
colnames(acdSP_is)[colnames(acdSP_is)=="SE_Y._st"]<-"Adult_SE_Abun"
jcdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs")
jcdSP_is<-jcdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_JuvColDen","SE_JuvColDen","CV_D._st")]
colnames(jcdSP_is)[colnames(jcdSP_is)=="CV_D._st"]<-"Juv_CV"
colnames(jcdSP_is)[colnames(jcdSP_is)=="Y._st"]<-"Juv_Abun"
colnames(jcdSP_is)[colnames(jcdSP_is)=="SE_Y._st"]<-"Juv_SE_Abun"
site.data.sp2$ANALYSIS_SCHEMA<-site.data.sp2$STRATANAME
site.data.sp2$DOMAIN_SCHEMA<-site.data.sp2$BEN_SEC
acdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","AdColDen","Adpres.abs")
acdSP_sec<-acdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AdColDen","SE_AdColDen","CV_D._st")]
colnames(acdSP_sec)[colnames(acdSP_sec)=="CV_D._st"]<-"Adult_CV"
colnames(acdSP_sec)[colnames(acdSP_sec)=="Y._st"]<-"Adult_Abun"
colnames(acdSP_sec)[colnames(acdSP_sec)=="SE_Y._st"]<-"Adult_SE_Abun"
jcdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs")
jcdSP_sec<-jcdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_JuvColDen","SE_JuvColDen")]
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="CV_D._st"]<-"Juv_CV"
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="Y._st"]<-"Juv_Abun"
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="SE_Y._st"]<-"Juv_SE_Abun"
#Merge dataframes together
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
st.data.sp<-Reduce(MyMerge, list(acdSP_st,jcdSP_st,odSP_st,rdSP_st,clSP_st,BLESP_st,AcuteDZSP_st,ChronicDZSP_st))
colnames(st.data.sp)[colnames(st.data.sp)=="ANALYSIS_SCHEMA"]<-"Stratum"
write.csv(st.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_STRATA_Timeseries.csv",row.names=F)
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
is.data.sp<-Reduce(MyMerge, list(acdSP_is,jcdSP_is,odSP_is,rdSP_is,clSP_is,bleSP_is,AcuteDZSP_is,ChronicDZSP_is))
colnames(is.data.sp)[colnames(is.data.sp)=="DOMAIN_SCHEMA"]<-"ISLAND"
write.csv(is.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_ISLAND_Timeseries.csv",row.names=F)
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
sec.data.sp<-Reduce(MyMerge, list(acdSP_sec,jcdSP_sec,odSP_sec,rdSP_sec,clSP_sec,bleSP_sec,AcuteDZSP_sec,ChronicDZSP_sec))
colnames(sec.data.sp)[colnames(sec.data.sp)=="DOMAIN_SCHEMA"]<-"Sector"
write.csv(sec.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_SECTOR_Timeseries.csv",row.names=F)
#Subset just ESA species and years for PIRO
#read in time series data (the script above takes 3+ hours to run)
# st.data.sp<-read.csv("T:/Benthic/Data/Data Requests/ESDPacificwide_STRATA_Timeseries.csv")
# is.data.sp<-read.csv("T:/Benthic/Data/Data Requests/ESDPacificwide_ISLAND_Timeseries.csv")
# sec.data.sp<-read.csv("T:/Benthic/Data/Data Requests/ESDPacificwide_SECTOR_Timeseries.csv")
esa<-read.csv("T:/Benthic/Data/Lookup Tables/ESACorals_lookup.csv")
st.data.sp_esa<-st.data.sp[st.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
st.data.sp_esa<-st.data.sp_esa[,1:17] #subset columns of interest
st.data.sp_esa$DEPTH_BIN<-Generate_DB(st.data.sp_esa) #create a depth bin column
st.data.sp_esa<-st.data.sp_esa[,-c(7,13,14)] #remove more columns
st.data.sp_esa<-left_join(st.data.sp_esa,esa) # join data with esa taxa look up table
st.data.sp_esa<-st.data.sp_esa[,c(1:6,15:17,7:14)] #reorder columns
head(st.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
head(is.data.sp_esa)
is.data.sp_esa<-is.data.sp_esa[,1:12] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa) # join data with esa taxa look up table
head(is.data.sp_esa)
ncol(is.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:12] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa) # join data with esa taxa look up table
is.data.sp_esa<-is.data.sp_esa[,c(1:4,13:14,5:12)] #reorder columns
head(is.data.sp_esa)
sec.data.sp_esa<-sec.data.sp[sec.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
head(sec.data.sp_esa)
#Calculate Sector Estimates
site.data.sp2$ANALYSIS_SCHEMA<-site.data.sp2$STRATANAME
site.data.sp2$DOMAIN_SCHEMA<-site.data.sp2$BEN_SEC
acdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","AdColDen","Adpres.abs")
acdSP_sec<-acdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AdColDen","SE_AdColDen","CV_D._st","Y._st","SE_Y._st")]
colnames(acdSP_sec)[colnames(acdSP_sec)=="CV_D._st"]<-"Adult_CV"
colnames(acdSP_sec)[colnames(acdSP_sec)=="Y._st"]<-"Adult_Abun"
colnames(acdSP_sec)[colnames(acdSP_sec)=="SE_Y._st"]<-"Adult_SE_Abun"
jcdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs")
jcdSP_sec<-jcdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_JuvColDen","SE_JuvColDen","CV_D._st","Y._st","SE_Y._st")]
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="CV_D._st"]<-"Juv_CV"
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="Y._st"]<-"Juv_Abun"
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="SE_Y._st"]<-"Juv_SE_Abun"
#Merge dataframes together
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
st.data.sp<-Reduce(MyMerge, list(acdSP_st,jcdSP_st,odSP_st,rdSP_st,clSP_st,BLESP_st,AcuteDZSP_st,ChronicDZSP_st))
colnames(st.data.sp)[colnames(st.data.sp)=="ANALYSIS_SCHEMA"]<-"Stratum"
write.csv(st.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_STRATA_Timeseries.csv",row.names=F)
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
is.data.sp<-Reduce(MyMerge, list(acdSP_is,jcdSP_is,odSP_is,rdSP_is,clSP_is,bleSP_is,AcuteDZSP_is,ChronicDZSP_is))
colnames(is.data.sp)[colnames(is.data.sp)=="DOMAIN_SCHEMA"]<-"ISLAND"
write.csv(is.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_ISLAND_Timeseries.csv",row.names=F)
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
sec.data.sp<-Reduce(MyMerge, list(acdSP_sec,jcdSP_sec,odSP_sec,rdSP_sec,clSP_sec,bleSP_sec,AcuteDZSP_sec,ChronicDZSP_sec))
colnames(sec.data.sp)[colnames(sec.data.sp)=="DOMAIN_SCHEMA"]<-"Sector"
write.csv(sec.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_SECTOR_Timeseries.csv",row.names=F)
#Subset just ESA species and years for PIRO
#read in time series data (the script above takes 3+ hours to run)
# st.data.sp<-read.csv("T:/Benthic/Data/Data Requests/ESDPacificwide_STRATA_Timeseries.csv")
# is.data.sp<-read.csv("T:/Benthic/Data/Data Requests/ESDPacificwide_ISLAND_Timeseries.csv")
# sec.data.sp<-read.csv("T:/Benthic/Data/Data Requests/ESDPacificwide_SECTOR_Timeseries.csv")
esa<-read.csv("T:/Benthic/Data/Lookup Tables/ESACorals_lookup.csv")
st.data.sp_esa<-st.data.sp[st.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
st.data.sp_esa<-st.data.sp_esa[,1:17] #subset columns of interest
st.data.sp_esa$DEPTH_BIN<-Generate_DB(st.data.sp_esa) #create a depth bin column
st.data.sp_esa<-st.data.sp_esa[,-c(7,13,14)] #remove more columns
st.data.sp_esa<-left_join(st.data.sp_esa,esa) # join data with esa taxa look up table
st.data.sp_esa<-st.data.sp_esa[,c(1:6,15:17,7:14)] #reorder columns
head(st.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:12] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa) # join data with esa taxa look up table
is.data.sp_esa<-is.data.sp_esa[,c(1:4,13:14,5:12)] #reorder columns
head(is.data.sp_esa)
sec.data.sp_esa<-sec.data.sp[sec.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
head(sec.data.sp_esa)
sec.data.sp_esa<-sec.data.sp_esa[,1:13] #subset columns of interest
sec.data.sp_esa<-left_join(sec.data.sp_esa,esa) # join data with esa taxa look up table
head(sec.data.sp_esa)
ncol(sec.data.sp_esa)
sec.data.sp_esa<-sec.data.sp[sec.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
sec.data.sp_esa<-sec.data.sp_esa[,1:13] #subset columns of interest
sec.data.sp_esa<-left_join(sec.data.sp_esa,esa) # join data with esa taxa look up table
sec.data.sp_esa<-sec.data.sp_esa[,c(1:4,14:15,5:13)] #reorder columns
head(sec.data.sp_esa)
write.csv(st.data.sp_esa,file="T:/Benthic/Data/Data Requests/ESDPacificwide_STRATA_ESA.csv")
write.csv(is.data.sp_esa,file="T:/Benthic/Data/Data Requests/ESDPacificwide_ISLAND_ESA.csv")
write.csv(sec.data.sp_esa,file="T:/Benthic/Data/Data Requests/ESDPacificwide_SECTOR_ESA.csv")
sec.data.sp_esa<-sec.data.sp_esa %>% drop_na(Mean_AdColDen)
head(sec.data.sp_esa)
View(sec.data.sp_esa)
rm(list=ls())
#Set Run Flags
DEBUG=TRUE
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
## LOAD benthic data
setwd("C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Benthic REA")
site.data.sp2<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Site/BenthicREA_sitedata_SPCODE.csv")
#Spcode
levels(site.data.sp2$MISSIONID)
site.data.sp2$EXCLUDE_FLAG<-ifelse(site.data.sp2$MISSIONID %in% c("MP1410","MP1512","MP1602","MP2006"),-1,0) #I left SE1602 in (2016 Jarvis and Rose)
head(subset(site.data.sp2,EXCLUDE_FLAG==-1))
#Actually remove special missions.
site.data.sp2<-subset(site.data.sp2,EXCLUDE_FLAG==0);
# this dataframe should be empty
head(subset(site.data.sp2,EXCLUDE_FLAG==-1))
# GENERATE DATA FOR TEMPORAL ANALYSIS---------------------------------------------------
site.data.sp2$STRATANAME<- paste(site.data.sp2$SEC_NAME,site.data.sp2$REEF_ZONE,site.data.sp2$DEPTH_BIN,sep="_")
st.list<-ddply(site.data.sp2,.(METHOD,OBS_YEAR,REGION,ISLAND,SEC_NAME,STRATANAME),summarize,n=length(unique(SITE)))
st.list2<-subset(st.list,n>=2);head(st.list)
#Generate list of strata that were surveyed in all years for a given region and had at least 2 sites/stratum
st.list_w<-dcast(st.list2, formula=METHOD+REGION+ISLAND+SEC_NAME+STRATANAME~ OBS_YEAR, value.var="n",fill=0)
dCOLS<-c("2013","2014","2015","2016","2017","2018","2019")
st.list_w$year_n<-rowSums(st.list_w[,dCOLS] > 0, na.rm=T) #count # of years of data
st.list_w2<-subset(st.list_w,REGION %in% c("MARIAN","PRIAs","SAMOA") & year_n>=2) #only include strata that have at least 2 years
st.list_w3<-subset(st.list_w,REGION %in% c("MHI","NWHI") & year_n>=3)#only include strata that have at least 3 years
st.list_w4<-rbind(st.list_w2,st.list_w3)
head(st.list_w4);st.list_w4<-droplevels(st.list_w4) #generate the list
site.data.sp2<-site.data.sp2[site.data.sp2$STRATANAME %in% c(st.list_w4$STRATANAME),] #Subset data to only include strata of interest
View(site.data.sp2) #double check that strata were dropped correctly
# POOLING DATA from Site to Strata and Domain at SPCODE-level---------------------------------------------------
survey_master<-read.csv("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/data/SURVEY MASTER.csv")
sectors<-read.csv("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/data/Sectors-Strata-Areas.csv", stringsAsFactors=FALSE)
#This function will pool data at Sector scale according to predetermined groups. Protected reef slope is converted to Forereef here
site.data.sp2<-PoolSecStrat(site.data.sp2)
# rich.data<-PoolSecStrat(rich.data.gen)
#QC CHECK to make sure the sectors and strata pooled correctly
data.test<-ddply(subset(site.data.sp2,SPCODE=="SSSS"),.(REGION,BEN_SEC,OBS_YEAR,STRATANAME),summarize,n=length(SITE))
sm.test<-ddply(subset(survey_master,Benthic=="1"&EXCLUDE_FLAG=="0"&OBS_YEAR>=2013),.(REGION,ISLAND,SEC_NAME,OBS_YEAR,REEF_ZONE,DEPTH_BIN),summarize,n=length(SITE))
write.csv(data.test,"tmp_sitedataQC.csv")
write.csv(sm.test,"tmp_sitemasterQC.csv")
# #Subset just Forereef Sites & just target taxa
# site.data.sp2<-subset(site.data.sp2,REEF_ZONE=="Forereef")
# site.data.sp2<-subset(site.data.sp2,SPCODE %in% c("ACSP", "MOSP", "PAVS", "POCS","POSP","SSSS"))
# rich.data<-subset(rich.data,REEF_ZONE=="Forereef")
# #Make sure you everything but forereef are dropped
# table(site.data.sp2$REEF_ZONE,site.data.sp2$SPCODE)
# table(rich.data$REEF_ZONE)
#Set ANALYSIS_SCHEMA to STRATA and DOMAIN_SCHEMA to whatever the highest level you want estimates for (e.g. sector, island, region)
site.data.sp2$ANALYSIS_SCHEMA<-site.data.sp2$STRATANAME
site.data.sp2$DOMAIN_SCHEMA<-site.data.sp2$ISLAND
#Calculate metrics at Strata-level-We need to work on combining metrics into 1 function
#Create a vector of columns to subset for strata estimates
c.keep<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","ANALYSIS_SCHEMA","REEF_ZONE","DB_RZ","SPCODE",
"n_h","N_h","D._h","SE_D._h","avp","SEprop","Y._h","SE_Y._h","CV_Y._h")
c.keep2<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","ANALYSIS_SCHEMA","REEF_ZONE","DB_RZ","SPCODE",
"n_h","N_h","D._h","SE_D._h")
c.keep3<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","ANALYSIS_SCHEMA","REEF_ZONE","DB_RZ","SPCODE",
"n_h","N_h","D._h","SE_D._h","avp","SEprop","Y._h","SE_Y._h","CV_Y._h")
c.keep4<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","ANALYSIS_SCHEMA","REEF_ZONE","DB_RZ","SPCODE",
"n_h","N_h","prev","SEprev")
acdSP_st<-Calc_Strata(site.data.sp2,"SPCODE","AdColDen","Adpres.abs");acdSP_st=acdSP_st[,c.keep]
colnames(acdSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","AdColDen","SE_AdColDen","Adult_avp","Adult_seprop","Adult_Abun","Adult_SE_Abun","Adult_CV")
jcdSP_st<-Calc_Strata(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs");jcdSP_st=jcdSP_st[,c.keep]
colnames(jcdSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","JuvColDen","SE_JuvColDen","Juv_avp","Juv_seprop","Juv_Abun","Juv_SE_Abun","Juv_CV")
odSP_st<-Calc_Strata(site.data.sp2,"SPCODE","Ave.od");odSP_st=odSP_st[,c.keep2]
colnames(odSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","Ave.od","SE_Ave.od")
rdSP_st<-Calc_Strata(site.data.sp2,"SPCODE","Ave.rd");rdSP_st=rdSP_st[,c.keep2]
colnames(rdSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","Ave.rd","SE_Ave.rd")
clSP_st<-Calc_Strata(site.data.sp2,"SPCODE","Ave.size");clSP_st=clSP_st[,c.keep2]
colnames(clSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","Ave.size","SE_Ave.size")
BLESP_st<-Calc_Strata_Prevalence(site.data.sp2,"SPCODE","BLE");BLESP_st=BLESP_st[,c.keep4]
colnames(BLESP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","BLE","SE_BLE")
AcuteDZSP_st<-Calc_Strata_Prevalence(site.data.sp2,"SPCODE","AcuteDZ");AcuteDZSP_st=AcuteDZSP_st[,c.keep4]
colnames(AcuteDZSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","AcuteDZ","SE_AcuteDZ")
ChronicDZSP_st<-Calc_Strata_Prevalence(site.data.sp2,"SPCODE","ChronicDZ");ChronicDZSP_st=ChronicDZSP_st[,c.keep4]
colnames(ChronicDZSP_st)<-c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot","ChronicDZ","SE_ChronicDZ")
#Double Check that revised pooling is adding up NH (total sites) correctly
View(acdSP_st)
View(sectors)
#Calculate Island Estimates
acdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","AdColDen","Adpres.abs")
acdSP_is<-acdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AdColDen","SE_AdColDen","CV_D._st","Y._st","SE_Y._st")]
colnames(acdSP_is)[colnames(acdSP_is)=="CV_D._st"]<-"Adult_CV"
colnames(acdSP_is)[colnames(acdSP_is)=="Y._st"]<-"Adult_Abun"
colnames(acdSP_is)[colnames(acdSP_is)=="SE_Y._st"]<-"Adult_SE_Abun"
jcdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs")
jcdSP_is<-jcdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_JuvColDen","SE_JuvColDen","CV_D._st")]
colnames(jcdSP_is)[colnames(jcdSP_is)=="CV_D._st"]<-"Juv_CV"
colnames(jcdSP_is)[colnames(jcdSP_is)=="Y._st"]<-"Juv_Abun"
colnames(jcdSP_is)[colnames(jcdSP_is)=="SE_Y._st"]<-"Juv_SE_Abun"
odSP_is<-Calc_Domain(site.data.sp2,"SPCODE","Ave.od")
odSP_is<-odSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.od","SE_Ave.od")]
rdSP_is<-Calc_Domain(site.data.sp2,"SPCODE","Ave.rd")
rdSP_is<-rdSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.rd","SE_Ave.rd")]
clSP_is<-Calc_Domain(site.data.sp2,"SPCODE","Ave.size")
clSP_is<-clSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.size","SE_Ave.size")]
bleSP_is<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","BLE")
bleSP_is<-bleSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_BLE_Prev","SE_BLE_Prev")]
AcuteDZSP_is<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","AcuteDZ")
AcuteDZSP_is<-AcuteDZSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AcuteDZ_Prev","SE_AcuteDZ_Prev")]
ChronicDZSP_is<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","ChronicDZ")
ChronicDZSP_is<-ChronicDZSP_is[,c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_ChronicDZ_Prev","SE_ChronicDZ_Prev")]
#Calculate Sector Estimates
site.data.sp2$ANALYSIS_SCHEMA<-site.data.sp2$STRATANAME
site.data.sp2$DOMAIN_SCHEMA<-site.data.sp2$BEN_SEC
acdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","AdColDen","Adpres.abs")
acdSP_sec<-acdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AdColDen","SE_AdColDen","CV_D._st","Y._st","SE_Y._st")]
colnames(acdSP_sec)[colnames(acdSP_sec)=="CV_D._st"]<-"Adult_CV"
colnames(acdSP_sec)[colnames(acdSP_sec)=="Y._st"]<-"Adult_Abun"
colnames(acdSP_sec)[colnames(acdSP_sec)=="SE_Y._st"]<-"Adult_SE_Abun"
jcdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","JuvColDen","Juvpres.abs")
jcdSP_sec<-jcdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_JuvColDen","SE_JuvColDen","CV_D._st","Y._st","SE_Y._st")]
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="CV_D._st"]<-"Juv_CV"
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="Y._st"]<-"Juv_Abun"
colnames(jcdSP_sec)[colnames(jcdSP_sec)=="SE_Y._st"]<-"Juv_SE_Abun"
odSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","Ave.od")
odSP_sec<-odSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.od","SE_Ave.od")]
rdSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","Ave.rd")
rdSP_sec<-rdSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.rd","SE_Ave.rd")]
clSP_sec<-Calc_Domain(site.data.sp2,"SPCODE","Ave.size")
clSP_sec<-clSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_Ave.size","SE_Ave.size")]
bleSP_sec<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","BLE")
bleSP_sec<-bleSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_BLE_Prev","SE_BLE_Prev")]
AcuteDZSP_sec<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","AcuteDZ")
AcuteDZSP_sec<-AcuteDZSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_AcuteDZ_Prev","SE_AcuteDZ_Prev")]
ChronicDZSP_sec<-Calc_Domain_Prevalence(site.data.sp2,"SPCODE","ChronicDZ")
ChronicDZSP_sec<-ChronicDZSP_sec[,c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot","Mean_ChronicDZ_Prev","SE_ChronicDZ_Prev")]
#REMOVE HOWLAND AND BAKER 2017 data- we only surveyed juveniles and coral cover at those islands in 2017
#Chose not to remove it until here in case you would like juvenile data from those locations and year.
st.data.sp<-st.data.sp[!((st.data.sp$ISLAND=="Howland"| st.data.sp$ISLAND=="Baker") & st.data.sp=="2017"),]
#Merge dataframes together
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
st.data.sp<-Reduce(MyMerge, list(acdSP_st,jcdSP_st,odSP_st,rdSP_st,clSP_st,BLESP_st,AcuteDZSP_st,ChronicDZSP_st))
colnames(st.data.sp)[colnames(st.data.sp)=="ANALYSIS_SCHEMA"]<-"Stratum"
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
is.data.sp<-Reduce(MyMerge, list(acdSP_is,jcdSP_is,odSP_is,rdSP_is,clSP_is,bleSP_is,AcuteDZSP_is,ChronicDZSP_is))
colnames(is.data.sp)[colnames(is.data.sp)=="DOMAIN_SCHEMA"]<-"ISLAND"
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
sec.data.sp<-Reduce(MyMerge, list(acdSP_sec,jcdSP_sec,odSP_sec,rdSP_sec,clSP_sec,bleSP_sec,AcuteDZSP_sec,ChronicDZSP_sec))
colnames(sec.data.sp)[colnames(sec.data.sp)=="DOMAIN_SCHEMA"]<-"Sector"
#REMOVE HOWLAND AND BAKER 2017 data- we only surveyed juveniles and coral cover at those islands in 2017
#Chose not to remove it until here in case you would like juvenile data from those locations and year.
st.data.sp<-st.data.sp[!((st.data.sp$ISLAND=="Howland"| st.data.sp$ISLAND=="Baker") & st.data.sp=="2017"),]
View(st.data.sp)
#REMOVE HOWLAND AND BAKER 2017 data- we only surveyed juveniles and coral cover at those islands in 2017
#Chose not to remove it until here in case you would like juvenile data from those locations and year.
st.data.sp<-st.data.sp[!(st.data.sp$ISLAND %in% c("Baker","Howland") & st.data.sp=="2017"),]
View(st.data.sp)
head(st.data.sp)
#Merge dataframes together
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
st.data.sp<-Reduce(MyMerge, list(acdSP_st,jcdSP_st,odSP_st,rdSP_st,clSP_st,BLESP_st,AcuteDZSP_st,ChronicDZSP_st))
colnames(st.data.sp)[colnames(st.data.sp)=="ANALYSIS_SCHEMA"]<-"Stratum"
#REMOVE HOWLAND AND BAKER 2017 data- we only surveyed juveniles and coral cover at those islands in 2017
#Chose not to remove it until here in case you would like juvenile data from those locations and year.
st.data.sp<-st.data.sp[!(st.data.sp$ISLAND =="Howland" & st.data.sp=="2017"),]
View(st.data.sp)
is.data.sp<-filter(is.data.sp,!ISLAND %in% c("Howland","Baker") & is.data.sp$ANALYSIS_YEAR=="2017")
View(is.data.sp)
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
is.data.sp<-Reduce(MyMerge, list(acdSP_is,jcdSP_is,odSP_is,rdSP_is,clSP_is,bleSP_is,AcuteDZSP_is,ChronicDZSP_is))
colnames(is.data.sp)[colnames(is.data.sp)=="DOMAIN_SCHEMA"]<-"ISLAND"
is.data.sp<-filter(is.data.sp,!(ISLAND %in% c("Howland","Baker") & is.data.sp$ANALYSIS_YEAR=="2017"))
View(is.data.sp)
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ISLAND","ANALYSIS_YEAR","Stratum","REEF_ZONE","DB_RZ","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
st.data.sp<-Reduce(MyMerge, list(acdSP_st,jcdSP_st,odSP_st,rdSP_st,clSP_st,BLESP_st,AcuteDZSP_st,ChronicDZSP_st))
colnames(st.data.sp)[colnames(st.data.sp)=="ANALYSIS_SCHEMA"]<-"Stratum"
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
is.data.sp<-Reduce(MyMerge, list(acdSP_is,jcdSP_is,odSP_is,rdSP_is,clSP_is,bleSP_is,AcuteDZSP_is,ChronicDZSP_is))
colnames(is.data.sp)[colnames(is.data.sp)=="DOMAIN_SCHEMA"]<-"ISLAND"
MyMerge <- function(x, y){
df <- merge(x, y, by= c("METHOD","REGION","ANALYSIS_YEAR","ISLAND","DOMAIN_SCHEMA","SPCODE","n","Ntot"), all.x= TRUE, all.y= TRUE)
return(df)
}
sec.data.sp<-Reduce(MyMerge, list(acdSP_sec,jcdSP_sec,odSP_sec,rdSP_sec,clSP_sec,bleSP_sec,AcuteDZSP_sec,ChronicDZSP_sec))
colnames(sec.data.sp)[colnames(sec.data.sp)=="DOMAIN_SCHEMA"]<-"Sector"
#REMOVE HOWLAND AND BAKER 2017 data- we only surveyed juveniles and coral cover at those islands in 2017
#Chose not to remove it until here in case you would like juvenile data from those locations and year.
st.data.sp<-filter(st.data.sp,!(ISLAND %in% c("Howland","Baker") & st.data.sp$ANALYSIS_YEAR=="2017"))
is.data.sp<-filter(is.data.sp,!(ISLAND %in% c("Howland","Baker") & is.data.sp$ANALYSIS_YEAR=="2017"))
sec.data.sp<-filter(sec.data.sp,!(ISLAND %in% c("Howland","Baker") & sec.data.sp$ANALYSIS_YEAR=="2017"))
write.csv(st.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_STRATA_Timeseries.csv",row.names=F)
write.csv(is.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_ISLAND_Timeseries.csv",row.names=F)
write.csv(sec.data.sp,file="T:/Benthic/Data/Data Requests/ESDPacificwide_SECTOR_Timeseries.csv",row.names=F)
esa<-read.csv("T:/Benthic/Data/Lookup Tables/ESACorals_lookup.csv")
st.data.sp_esa<-st.data.sp[st.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
st.data.sp_esa<-st.data.sp_esa[,1:17] #subset columns of interest
st.data.sp_esa$DEPTH_BIN<-Generate_DB(st.data.sp_esa) #create a depth bin column
st.data.sp_esa<-st.data.sp_esa[,-c(7,13,14)] #remove more columns
st.data.sp_esa<-left_join(st.data.sp_esa,esa) # join data with esa taxa look up table
st.data.sp_esa<-st.data.sp_esa[,c(1:6,15:17,7:14)] #reorder columns
head(st.data.sp_esa)
is.data.sp_esa<-is.data.sp[is.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
is.data.sp_esa<-is.data.sp_esa[,1:12] #subset columns of interest
is.data.sp_esa<-left_join(is.data.sp_esa,esa) # join data with esa taxa look up table
is.data.sp_esa<-is.data.sp_esa[,c(1:4,13:14,5:12)] #reorder columns
head(is.data.sp_esa)
sec.data.sp_esa<-sec.data.sp[sec.data.sp$SPCODE %in% c(esa$SPCODE),] #subset just esa taxa
sec.data.sp_esa<-sec.data.sp_esa[,1:13] #subset columns of interest
sec.data.sp_esa<-left_join(sec.data.sp_esa,esa) # join data with esa taxa look up table
sec.data.sp_esa<-sec.data.sp_esa[,c(1:4,14:15,5:13)] #reorder columns
sec.data.sp_esa<-sec.data.sp_esa %>% drop_na(Mean_AdColDen)
head(sec.data.sp_esa)
write.csv(st.data.sp_esa,file="T:/Benthic/Data/Data Requests/ESDPacificwide_STRATA_ESA.csv")
write.csv(is.data.sp_esa,file="T:/Benthic/Data/Data Requests/ESDPacificwide_ISLAND_ESA.csv")
write.csv(sec.data.sp_esa,file="T:/Benthic/Data/Data Requests/ESDPacificwide_SECTOR_ESA.csv")
