scale_y_continuous()+
theme_bw()+xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
ggplot(subset(SSSSp,Var%in%targets_manu),aes(N.pow,deltaBT.pow))+
geom_point(shape=1,size=3)+
geom_point(shape=0,size=3)+
geom_line(subset(tarDF,var%in%targets_manu),aes(N,deltaUT))+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
SSSSm<-subset(Var%in%targets_manu)
tarDFm<-subset(var%in%targets_manu)
SSSSm<-subset(SSSSp,Var%in%targets_manu)
tarDFm<-subset(tarDF,var%in%targets_manu)
ggplot(tarDFm,aes(N,deltaUT))+
geom_line()+
geom_point(SSSSm,aes(N.pow,deltaBT.pow),shape=1,size=3)+
geom_point(SSSSm,aes(N.x,MAEb),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
ggplot(tarDFm,aes(N,deltaUT))+
geom_line()+
geom_point(SSSSm,aes(N.pow,deltaBT.pow),shape=1,size=3)
ggplot(tarDFm,aes(N,deltaUT))+
geom_line()
head(SSSSm)
ggplot()+
geom_line(tarDFm,aes(N,deltaUT))+
geom_point(SSSSm,aes(N.pow,deltaBT.pow),shape=1,size=3)+
geom_point(SSSSm,aes(N.x,MAEb),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
ggplot(data=tarDFm,aes(N,deltaUT))+
geom_line()+
geom_point(data=SSSSm,aes(N.pow,deltaBT.pow),shape=1,size=3)+
geom_point(data=SSSSm,aes(N.x,MAEb),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
ggplot(data=subset(tarDF,var%in%targets_manu),aes(N,deltaUT))+
geom_line()+
geom_point(data=subset(SSSSp,Var%in%targets_manu),aes(N.pow,deltaBT.pow),shape=1,size=3)+
geom_point(data=subset(SSSSp,Var%in%targets_manu),aes(N.x,MAEb),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
ggplot(data=subset(tarDF,var%in%targets_manu),aes(N,deltaUT))+
geom_line()+
geom_point(data=subset(SSSSp,Var%in%targets_manu),aes(N.pow,deltaBT.pow),shape=1,size=3)+
geom_point(data=subset(SSSSp,Var%in%targets_manu),aes(N.x,MAEb),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
PowerMAE_rep=ggplot(data=subset(tarDF,var%in%targets_manu),aes(N,deltaUT))+
geom_line()+
geom_point(data=subset(SSSSp,Var%in%targets_manu),aes(N.pow,deltaBT.pow),shape=1,size=3)+
geom_point(data=subset(SSSSp,Var%in%targets_manu),aes(N.x,MAEb),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
ggsave(plot = PowerMAE_rep,filename = "T:/Benthic/Data/SfM/Method Comparision/Figures/PowerCurves_Manuscript.jpg",
width=6.5,height=6.5)
ggplot(data=subset(tarDF,var%in%targets_report),aes(N,deltaUT))+
geom_line()+
geom_point(data=subset(SSSSp,Var%in%targets_report),aes(N.pow,deltaBT.pow),shape=1,size=3)+
geom_point(data=subset(SSSSp,Var%in%targets_report),aes(N.x,MAEb),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
PowerMAE_rep=ggplot(data=subset(tarDF,var%in%targets_report),aes(N,deltaUT))+
geom_line()+
geom_point(data=subset(SSSSp,Var%in%targets_report),aes(N.pow,deltaBT.pow),shape=1,size=3)+
geom_point(data=subset(SSSSp,Var%in%targets_report),aes(N.x,MAEb),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_wrap(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+
xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
ggsave(plot = PowerMAE_rep,filename = "T:/Benthic/Data/SfM/Method Comparision/Figures/PowerCurves_Report.jpg",
width=6.5,height=6.5)
#all look like we should use a sqrt transform (though log could be better for size...)
tarGEN=NULL
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(SSSS$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
GENsum=Belt[,c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS"),METHOD=="SfM") %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values") %>%
mutate(SqrtVal=sqrt(Values)) %>%
group_by(GENUS_CODE,Var) %>%
summarise(N=Nnona(Values),sd=sd(Values,na.rm=T),se=se(Values),CoV=CoV(Values))
GENdelta=Belt[c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS")) %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values")%>%
pivot_wider(names_from=METHOD,values_from=Values)%>%
mutate(Delta=SfM-Diver,SqrtDelta=sqrt(SfM)-sqrt(Diver))%>%
group_by(GENUS_CODE,Var)%>%
summarize(N=Nnona(Delta),MAE=mean(abs(Delta),na.rm=T),SE_AE=se(abs(Delta)),CI_AE=CI95(abs(Delta)))
GENp=right_join(GENdelta,GENsum,by="Var")
GENp$plotvar=tpLU[GENp$Var]
head(GENp)
PowLev=subset(tarGEN,N==104)
names(PowLev)=c("N.pow","delta.pow","Var","plotvar")
GENp=right_join(GENp,PowLev,by=c("Var","plotvar"))
GENp$EffSizeSD=GENp$delta.pow/GENp$sd
names(PowLev)=c("N","delta","Var","plotvar")
tarGEN$plotvar=factor(tarGEN$plotvar,levels=c("Adult Colony Density","Juvenile Colony Density"))
GENp$plotvar=factor(GENp$plotvar,levels=c("Adult Colony Density","Juvenile Colony Density"))
PowerMAEGEN=ggplot(tarGEN,aes(N,delta))+
geom_line()+
geom_point(data=SSSSp,aes(N.pow,delta.pow),shape=1,size=3)+
geom_point(data=SSSSp,aes(N.x,MAE),shape=0,size=3)+
#  geom_errorbar(data=SSSSp,aes(x=N.x,y=MAE,
#                              ymin=(MAE-CI_AE),ymax=(MAE+CI_AE)))+
facet_grid(.~plotvar,scales="free_y")+
scale_x_continuous()+
scale_y_continuous()+
theme_bw()+xlab("Sample Size")+ylab("Power Analysis Effect Size : MAE")
#all look like we should use a sqrt transform (though log could be better for size...)
tarGEN=NULL
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(SSSS$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
GENsum=Belt[,c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS"),METHOD=="SfM") %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values") %>%
mutate(SqrtVal=sqrt(Values)) %>%
group_by(GENUS_CODE,Var) %>%
summarise(N=Nnona(Values),sd=sd(Values,na.rm=T),se=se(Values),CoV=CoV(Values))
GEN=subset(Belt,GENUS_CODE %in% c("MOSP","POSP","POCS"))
#all look like we should use a sqrt transform (though log could be better for size...)
tarGEN=NULL
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(SSSS$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
GEN=subset(Belt,GENUS_CODE %in% c("MOSP","POSP","POCS"))
#all look like we should use a sqrt transform (though log could be better for size...)
tarGEN=NULL
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
GENsum=Belt[,c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS"),METHOD=="SfM") %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values") %>%
mutate(SqrtVal=sqrt(Values)) %>%
group_by(GENUS_CODE,Var) %>%
summarise(N=Nnona(Values),sd=sd(Values,na.rm=T),se=se(Values),CoV=CoV(Values))
GENdelta=Belt[c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS")) %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values")%>%
pivot_wider(names_from=METHOD,values_from=Values)%>%
mutate(Delta=SfM-Diver,SqrtDelta=sqrt(SfM)-sqrt(Diver))%>%
group_by(GENUS_CODE,Var)%>%
summarize(N=Nnona(Delta),MAE=mean(abs(Delta),na.rm=T),SE_AE=se(abs(Delta)),CI_AE=CI95(abs(Delta)))
GENp=right_join(GENdelta,GENsum,by="Var")
GENp$plotvar=tpLU[GENp$Var]
head(GENp)
PowLev=subset(tarGEN,N==104)
head(GENdelta)
head(GENsum)
GENp=right_join(GENdelta,GENsum,by=c("Var","GENUS_CODE"))
head(GENp)
PowLev=subset(tarGEN,N==104)
names(PowLev)=c("N.pow","delta.pow","Var","plotvar")
GENp=right_join(GENp,PowLev,by=c("Var","plotvar"))
GENp$EffSizeSD=GENp$delta.pow/GENp$sd
names(PowLev)=c("N","delta","Var","plotvar")
tarGEN$plotvar=factor(tarGEN$plotvar,levels=c("Adult Colony Density","Juvenile Colony Density"))
GENp$plotvar=factor(GENp$plotvar,levels=c("Adult Colony Density","Juvenile Colony Density"))
GENp=right_join(GENdelta,GENsum,by=c("Var","GENUS_CODE"))
head(GENp)
GENp$plotvar=tpLU[GENp$Var]
PowLev=subset(tarGEN,N==104)
names(PowLev)=c("N.pow","delta.pow","Var","plotvar")
head(PowLev)
GENp=right_join(GENdelta,GENsum,by=c("Var","GENUS_CODE"))
GENp$plotvar=tpLU[GENp$Var]
head(GENp)
PowLev=subset(tarGEN,N==104)
head(PowLev)
head(tarGEN)
tarGEN=NULL
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=c("MOSP","POSP","POCS"),delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
head(tarGEN)
GENsum=Belt[,c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS"),METHOD=="SfM") %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values") %>%
mutate(SqrtVal=sqrt(Values)) %>%
group_by(GENUS_CODE,Var) %>%
summarise(N=Nnona(Values),sd=sd(Values,na.rm=T),se=se(Values),CoV=CoV(Values))
GENdelta=Belt[c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS")) %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values")%>%
pivot_wider(names_from=METHOD,values_from=Values)%>%
mutate(Delta=SfM-Diver,SqrtDelta=sqrt(SfM)-sqrt(Diver))%>%
group_by(GENUS_CODE,Var)%>%
summarize(N=Nnona(Delta),MAE=mean(abs(Delta),na.rm=T),SE_AE=se(abs(Delta)),CI_AE=CI95(abs(Delta)))
GENp=right_join(GENdelta,GENsum,by=c("Var","GENUS_CODE"))
GENp$plotvar=tpLU[GENp$Var]
head(GENp)
PowLev=subset(tarGEN,N==104)
head(PowLev)
PowLev
head(tarGEN)
targets
tarGEN=NULL
uGENUS_CODE=unique(GEN$GENUS_CODE)
for(g in 1:length(uGENUS_CODE)){
GENUS_CODE=subset(GEN,GENUS_CODE==uGENUS_CODE[g])
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=GENUS_CODE[g],delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
}
tarGEN=NULL
uGENUS_CODE=unique(GEN$GENUS_CODE)
for(g in 1:length(uGENUS_CODE)){
GENUS_CODE=subset(GEN,GENUS_CODE==uGENUS_CODE[g])
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=uGENUS_CODE[g],delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
}
tarGEN
View(tarGEN)
tarGEN=NULL
uGENUS_CODE=unique(GEN$GENUS_CODE)
for(g in 1:length(uGENUS_CODE)){
GENUS_CODE=subset(GEN,GENUS_CODE==uGENUS_CODE[g])
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=uGENUS_CODE[g],delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(uGENUS_CODE[g],targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
}
View(tarGEN)
tarGEN=NULL
uGENUS_CODE=unique(GEN$GENUS_CODE)
for(g in 1:length(uGENUS_CODE)){
GENUS_CODE=subset(GEN,GENUS_CODE==uGENUS_CODE[g])
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=uGENUS_CODE[g],delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(GENUS_CODE[g],targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
}
View(tarGEN)
tarGEN=NULL
uGENUS_CODE=unique(GEN$GENUS_CODE)
for(g in 1:length(uGENUS_CODE)){
GENUS_CODE=subset(GEN,GENUS_CODE==uGENUS_CODE[g])
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=uGENUS_CODE[g],delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
}
View(tarGEN)
tarGEN=NULL
uGENUS_CODE=unique(GEN$GENUS_CODE)
for(g in 1:length(uGENUS_CODE)){
GENUS_CODE=subset(GEN,GENUS_CODE==uGENUS_CODE[g])
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=uGENUS_CODE[g],delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
}
View(tarGEN)
GENsum=Belt[,c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS"),METHOD=="SfM") %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values") %>%
mutate(SqrtVal=sqrt(Values)) %>%
group_by(GENUS_CODE,Var) %>%
summarise(N=Nnona(Values),sd=sd(Values,na.rm=T),se=se(Values),CoV=CoV(Values))
GENdelta=Belt[c("METHOD","SITE","SITEVISITID","GENUS_CODE",targets[1:2])]%>%
filter(GENUS_CODE%in%c("MOSP","POSP","POCS")) %>%
pivot_longer(cols = all_of(targets[1:2]),
names_to = "Var",values_to = "Values")%>%
pivot_wider(names_from=METHOD,values_from=Values)%>%
mutate(Delta=SfM-Diver,SqrtDelta=sqrt(SfM)-sqrt(Diver))%>%
group_by(GENUS_CODE,Var)%>%
summarize(N=Nnona(Delta),MAE=mean(abs(Delta),na.rm=T),SE_AE=se(abs(Delta)),CI_AE=CI95(abs(Delta)))
GENp=right_join(GENdelta,GENsum,by=c("Var","GENUS_CODE"))
GENp$plotvar=tpLU[GENp$Var]
head(GENp)
PowLev=subset(tarGEN,N==104)
names(PowLev)=c("N.pow","delta.pow","Var","plotvar")
GENp=right_join(GENp,PowLev,by=c("Var","plotvar"))
GENp$EffSizeSD=GENp$delta.pow/GENp$sd
names(PowLev)=c("N","delta","Var","plotvar")
tarGEN$plotvar=factor(tarGEN$plotvar,levels=c("Adult Colony Density","Juvenile Colony Density"))
GENp$plotvar=factor(GENp$plotvar,levels=c("Adult Colony Density","Juvenile Colony Density"))
GENp=right_join(GENdelta,GENsum,by=c("Var","GENUS_CODE"))
GENp$plotvar=tpLU[GENp$Var]
GENp
PowLev=subset(tarGEN,N==104)
head(PowLev)
names(PowLev)=c("N.pow","GENUS_CODE","delta.pow","Var","plotvar")
GENp=right_join(GENp,PowLev,by=c("Var","plotvar"))
GENp$EffSizeSD=GENp$delta.pow/GENp$sd
GENp$EffSizeSD=GENp$delta.pow/GENp$sd
head(PowLev)
GENp=right_join(GENdelta,GENsum,by=c("Var","GENUS_CODE"))
GENp$plotvar=tpLU[GENp$Var]
head(GENp)
PowLev=subset(tarGEN,N==104)
names(PowLev)=c("N.pow","GENUS_CODE","delta.pow","Var","plotvar")
GENp=right_join(GENp,PowLev,by=c("Var","plotvar"))
GENp$EffSizeSD=GENp$delta.pow/GENp$sd
names(PowLev)=c("N","GENUS_CODE","delta","Var","plotvar")
tarGEN$plotvar=factor(tarGEN$plotvar,levels=c("Adult Colony Density","Juvenile Colony Density"))
GENp$plotvar=factor(GENp$plotvar,levels=c("Adult Colony Density","Juvenile Colony Density"))
head(tarGEN)
tarGEN=NULL
uGENUS_CODE=unique(GEN$GENUS_CODE)
for(g in 1:length(uGENUS_CODE)){
GENUS_CODE=subset(GEN,GENUS_CODE==uGENUS_CODE[g])
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=uGENUS_CODE[g],delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
GEN$GENUS_CODE=(GEN[,c(uGENUS_CODE[g])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
}
View(tarGEN)
tarGEN=NULL
uGENUS_CODE=unique(GEN$GENUS_CODE)
for(g in 1:length(uGENUS_CODE)){
GENUS_CODE=subset(GEN,GENUS_CODE==uGENUS_CODE[g])
for(t in 1:length(targets[1:2])){
DF=data.frame(N=seq(3,350,by=1),GENUS_CODE=uGENUS_CODE[g],delta=NA,var=targets[t],plotvar=targetsplot[t],stringsAsFactors = F)
GEN$Y=(GEN[,c(targets[t])])
GEN$GENUS_CODE=(GEN[,c(GENUS_CODE[g])])
for (i in 1:nrow(DF)){
Yt=power.t.test(sd = sd(GEN$Y,na.rm=T),n = DF$N[i],
sig.level = 0.05,power = 0.8)
DF$delta[i]=Yt$delta
print(paste(targets[t],"N=",DF$N[i]))
}
tarGEN=rbind(tarGEN,DF)
#plotlist[[t]]=ggplot(DF,aes(N,delta/meanDF$N,DF$delta/mean(SfM$Y,na.rm=T),log="x",ylab="Percent Effect Size",type="l")
}
}
View(tarGEN)
SSSSp
View(SSSSp)
View(SSSS)
tmp<-ddply(SSSS,.(GENUS_CODE,METHOD),summarize,mean=mean(Ave.od))
tmp
tmp<-ddply(SSSS,.(GENUS_CODE,METHOD),summarize,mean=mean(Ave.od,na.rm=T))
tmp
tmp<-ddply(SSSS,.(GENUS_CODE),summarize,mean=mean(Ave.od,na.rm=T))
tmp
tmp<-ddply(SSSS,.(GENUS_CODE),summarize,mean=mean(BLE_prev,na.rm=T))
tmp
#This script cleans and prepared the SfM-generated data from the full set of method comparision sites from RAMP
#The data you read into this script is the exported Arc geodatabase that has already been QC'd.
#A number columns need to be added or modified to follow the format of the REA deomographic data from Oracle
rm(list=ls())
#Set Run Flags
DEBUG=TRUE
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
# source("C:/Users/Corinne.Amir/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
# source("C:/Users/Corinne.Amir/Documents/GitHub/fish-paste/lib/core_functions.R")
# source("C:/Users/Corinne.Amir/Documents/GitHub/fish-paste/lib/GIS_functions.R")
setwd("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/SfM/Method Comparision")
# SFM/ADULT: CLEAN ANALYSIS READY DATA ----------------------------------------------------
df<-read.csv("T:/Benthic/Data/SfM/QC/HARAMP2019_QCdsfm_ADULT.csv")
