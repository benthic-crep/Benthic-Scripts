
# This script will clean the raw benthic REA data using method E that comes directly from the new data base application.
#Note- these data represent the revised data structure insituted in November 2018. Several recent dead and condition columns were added
#These data only include surveys conducted between 2013-2019
rm(list=ls())

#Set Run Flags
DEBUG=TRUE

#LOAD LIBRARY FUNCTIONS ... 
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/fish_team_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/Islandwide Mean&Variance Functions.R")

library(VCA)
library(forcats)
library(geosphere)
library(rgdal)
library(stringr)
library(mgcv)
detach(package:dplyr) #dplyr has issues if plyr is loaded first
library(dplyr)

setwd("C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Juvenile Project")

#LOAD DATA
jwd_strat<-read.csv("T:/Benthic/Projects/Juvenile Project/JuvProject_pb_STRATA.csv")#Post bleaching strata-level juvenile data
jwd_site<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Site/BenthicREA_sitedata_GENUS.csv")
d_strat<-read.csv("T:/Benthic/Projects/Juvenile Project/JuvProject_deltadensity_STRATA.csv"); d_strat<-subset(d_strat,select= -c(X))


tsdhw<-read.csv("T:/Benthic/Projects/Juvenile Project/Juvenile_TimeSinceDHW4_8.csv"); tsdhw<-subset(tsdhw,select= -c(X))
wave<-read.csv("T:/Benthic/Projects/Juvenile Project/Pacific_WaveActionData.csv")
SM<-read.csv("M:/Environmental Data Summary/Outputs/Survey_Master_Timeseries_2021-02-27.csv")
sh<-read.csv("C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Juvenile Project/Predictor Variables/ESD_Fish_Complexity.csv")#Substrate height from fish sites
cover1<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Site/BenthicCover_2010-2020_Tier1_SITE.csv")#Cover from all sites
cover3<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Site/BenthicCover_2010-2020_Tier3_SITE.csv")#Cover from all sites
sectors<-read.csv("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/data/Sectors-Strata-Areas.csv", stringsAsFactors=FALSE)
#load("C:/Users/Courtney.S.Couch/Documents/GitHub/env_data_summary/outputs/Survey_Master_Timeseries_2021-02-27.Rdata") #Survey master file with env data

#Change Regions to correspond to juvenile data
Convert_Region<-function(data){
  data$REGION<-ifelse(data$ISLAND %in% c("Farallon de Pajaros", "Maug", "Asuncion", "Alamagan", "Pagan", "Agrihan", "Guguan", "Sarigan","Farallon_de_Pajaros")
                      ,"NMARIAN", as.character(data$REGION))
  data$REGION<-ifelse(data$ISLAND %in% c("Saipan", "Tinian", "Aguijan", "Rota", "Guam")
                    ,"SMARIAN", as.character(data$REGION))
  data$REGION<-ifelse(data$ISLAND %in% c("Howland","Baker")
                    ,"PHOENIX", as.character(data$REGION))
  data$REGION<-ifelse(data$ISLAND =="Wake"
                    ,"WAKE", as.character(data$REGION))
  data$REGION<-ifelse(data$ISLAND %in% c("Kingman","Palmyra","Jarvis")
                    ,"LINE", as.character(data$REGION))
  return(data$REGION)
}

SM$REGION<-Convert_Region(SM)
sh$REGION<-Convert_Region(sh)
cover1$REGION<-Convert_Region(cover1)
cover3$REGION<-Convert_Region(cover3)
sectors$REGION<-Convert_Region(sectors)
jwd_site$REGION<-Convert_Region(jwd_site)


#Remove spaces in island and sec names
d_strat<- mutate_if(d_strat, 
          is.character, 
          str_replace_all, pattern = " ", replacement = "_")

jwd_site <- mutate_if(jwd_site, 
                is.character, 
                str_replace_all, pattern = " ", replacement = "_")

wave<-mutate_if(wave, 
                is.character, 
                str_replace_all, pattern = " ", replacement = "_")

sh<-mutate_if(sh, 
              is.character, 
              str_replace_all, pattern = " ", replacement = "_")

cover1<-mutate_if(cover1, 
              is.character, 
              str_replace_all, pattern = " ", replacement = "_")

cover3<-mutate_if(cover3, 
                  is.character, 
                  str_replace_all, pattern = " ", replacement = "_")

sectors<-mutate_if(sectors, 
                  is.character, 
                  str_replace_all, pattern = " ", replacement = "_")

SM<-mutate_if(SM, 
                is.character, 
              str_replace_all, pattern = " ", replacement = "_")

#Clean up juv site data
levels(jwd_site$MISSIONID)
jwd_site<-jwd_site[!jwd_site$MISSIONID %in% c("MP1410","MP1512","MP1602","SE1602","MP2006"),]
jwd_site$Year_Island<-paste(jwd_site$OBS_YEAR,jwd_site$ISLAND,sep="_")
jwd_site$Year_Region<-paste(jwd_site$OBS_YEAR,jwd_site$REGION,sep="_")
jwd_site<-jwd_site[!jwd_site$Year_Island %in% c("2017_Baker","2017_Jarvis","2017_Howland"),] 
jwd_site<-subset(jwd_site,Year_Region !="2013_MHI")
jwd_site<-droplevels(jwd_site);levels(jwd_site$MISSIONID)
View(jwd_site)

#Only use Total Scl juvenile data 
jwd_siteS<-jwd_site%>%dplyr::filter(GENUS_CODE=="SSSS")
jwd_siteS$ANALYSIS_SEC<-jwd_siteS$SEC_NAME
jwd_siteS$STRATANAME<-paste(jwd_siteS$ANALYSIS_SEC,jwd_siteS$REEF_ZONE,jwd_siteS$DEPTH_BIN,sep="_")


#Subset survey master and env columns of interest
cols<-c("MISSIONID","DATE_","SITEVISITID", "OBS_YEAR", "REGION", "ISLAND","SEC_NAME", "SITE","HABITAT_CODE","REEF_ZONE",
               "DEPTH_BIN", "LATITUDE_LOV", "LONGITUDE_LOV","new_MIN_DEPTH_M","new_MAX_DEPTH_M","DHW.MeanMax_Degree_Heating_Weeks_YR01","DHW.MeanMax_Degree_Heating_Weeks_YR05", "DHW.MeanMax_Degree_Heating_Weeks_YR10","DHW.MaxMax_Degree_Heating_Weeks_YR10",
        "DHW.MeanDur_Major_Degree_Heating_Weeks_YR10","mean_annual_range_Chlorophyll_A_ESAOCCCI_8Day_YR10",
        "mean_annual_range_Kd490_ESAOCCCI_8Day_YR10","mean_kdPAR_VIIRS_Weekly_YR10")
sm_env<-SM[,cols]



#Generate a list of Regions and years to include in final summary
REGION<-c("NWHI","MHI","PHOENIX","LINE","SMARIAN","NMARIAN","SAMOA","WAKE")
OBS_YEAR<-c("2016","2019","2018","2018","2017","2017","2018","2017")
keep<-as.data.frame(cbind(REGION,OBS_YEAR))

keep$r_y<-paste(keep$REGION,keep$OBS_YEAR,sep = "_")

#ONly include years where sites were most recently surveyed for each region
sm_env$r_y<-paste(sm_env$REGION,sm_env$OBS_YEAR,sep = "_")
sm_env<-sm_env[sm_env$r_y %in% c(keep$r_y),]

#Subset survey master to only include juvenile sites
sm_env<-sm_env[sm_env$SITEVISITID %in% c(jwd_site$SITEVISITID),]
table(sm_env$REGION,sm_env$OBS_YEAR)

sm_env$ANALYSIS_SEC<-sm_env$SEC_NAME
sm_env$STRATANAME<-paste(sm_env$ANALYSIS_SEC,sm_env$REEF_ZONE,sm_env$DEPTH_BIN,sep="_")


#List of Predictor Variables, where the data can be found and whether they are ready to use at the Stratum level
predlist<-data.frame(Variable=c("Habitat Code","Frequency of DHW events","Mean Max DHW over previous 10yr","Mean Max DHW over previous 5yr",
                                "Time Since last > 8 DHW","Latitude","kd490","kdPAR","Chlorophylla", "Mean Depth","Mean Proximity to Humans","Wave Power","Substrate Height",
                                "Benthic Cover"),
                     Data_Location= c("SURVEY_MASTER","EDS","EDS","EDS","EDS","SURVEY_MASTER","EDS","EDS","SURVEY_MASTER","SURVEY_MASTER","M Drive","Predictor Variables Folder",
                                      "T drive"),
                     Summarized_to_Stratum= c("Y","N","Y","Y","N","Y","N","N","Y","N","N","Y","Y"))




# Time Since DHW ----------------------------------------------------------
tsdhw<-tsdhw %>% drop_na(ISLAND) #drop rows that have NA values in ISLAND
sm_env<-left_join(sm_env,tsdhw)
ts_sum<-sm_env %>%
  group_by(REGION,ISLAND,ANALYSIS_SEC,STRATANAME) %>%
  summarize(YearSinceDHW4=mean(YearSinceDHW4,na.rm=T),
            YearSinceDHW8=mean(YearSinceDHW8,na.rm=T))


# Human Density -----------------------------------------------------------
# We are missing human density from most of the benthic sites, calculate strata level human density using fish sites
#I had to use older data for some of the regions because we don't have exisiting human density data calculated

SM2<-SM%>%dplyr::filter(OBS_YEAR>=2013)

SM2$ANALYSIS_SEC<-SM2$SEC_NAME
SM2$STRATANAME<-paste(SM2$ANALYSIS_SEC,SM2$REEF_ZONE,SM2$DEPTH_BIN,sep="_")

humans_sum<-SM2 %>%
  group_by(REGION,ISLAND,ANALYSIS_SEC,STRATANAME) %>%
  summarize(HUMANS20_mean=mean(HUMANS20,na.rm=T),
            HUMANS200_mean=mean(HUMANS200,na.rm=T))

View(humans_sum)


# Summarizing EDS variables ---------------------------------------------------------------------
eds_sum<-sm_env %>%
  group_by(REGION,ISLAND,ANALYSIS_SEC,STRATANAME) %>%
  summarize(MeanMaxDHW10=mean(DHW.MeanMax_Degree_Heating_Weeks_YR10,na.rm=T),MaxMaxDHW10=mean(DHW.MaxMax_Degree_Heating_Weeks_YR10,na.rm=T),
            Meankd490=mean(mean_annual_range_Kd490_ESAOCCCI_8Day_YR10,na.rm=T),meankdPAR=mean(mean_kdPAR_VIIRS_Weekly_YR10,na.rm=T))


# WAVE POWER --------------------------------------------------------

#Calculate Strata-Level Wave data
#merge wave data with survey master
cols<-c("MISSIONID","DATE_","SITEVISITID", "OBS_YEAR", "REGION", "SEC_NAME", "SITE","HABITAT_CODE","REEF_ZONE",
        "DEPTH_BIN")
sm_wave<-SM[,cols]

wsd<-left_join(wave,sm_wave)

#Merge together wsd and sectors
wsd<-left_join(wsd,sectors[,c("REGION","SEC_NAME","REEF_ZONE","DEPTH_BIN","AREA_HA")]);nrow(wsd);head(wsd)

#Subset just Forereef sites
wsd$REEF_ZONE<-ifelse(wsd$REEF_ZONE=="Protected Slope","Forereef",as.character(wsd$REEF_ZONE))
wsd<-wsd%>% dplyr::filter(REEF_ZONE=="Forereef")
table(wsd$REEF_ZONE)

wsd$STRATANAME<-paste(wsd$SEC_NAME,wsd$REEF_ZONE,wsd$DEPTH_BIN,sep="_") #Create stratum
head(wsd)

wsd$ANALYSIS_SEC<-wsd$SEC_NAME
wsd$ANALYSIS_YEAR<-wsd$OBS_YEAR

#Summarize to stratum level
wave_sum<-wsd %>%
  group_by(REGION,ISLAND,ANALYSIS_SEC,STRATANAME) %>%
  summarize(MeanWavePower=mean(WavePower,na.rm=T))

head(wave_sum)

# SUBSTRATE HEIGHT --------------------------------------------------------
#ONly include years where sites were most recently surveyed for each region
sh.new<-sh%>%dplyr::filter(OBS_YEAR>=2017)


SURVEY_SITE<-c("DATE_","SITEVISITID", "ANALYSIS_YEAR","REGION", "ISLAND","SEC_NAME", "SITE","HABITAT_CODE","REEF_ZONE",
               "DEPTH_BIN", "LATITUDE", "LONGITUDE","MEAN_SH","SD_SH_DIFF")
sh.site<-unique(sh.new[,SURVEY_SITE]);head(sh.site)
sh.site$STRATANAME<-paste(sh.site$SEC_NAME,sh.site$REEF_ZONE,sh.site$DEPTH_BIN,sep="_") #Create stratum

#Calculate Strata-Level Substrate Height data

#Merge together wsd and sectors
wsd<-left_join(sh.site,sectors[,c("SEC_NAME","REEF_ZONE","DEPTH_BIN","AREA_HA")]);nrow(wsd);head(wsd)

#Remove NAs from dataframe
wsd<-wsd[!is.na(wsd$MEAN_SH), ]
View(wsd)

#Subset just Forereef sites
wsd$REEF_ZONE<-ifelse(wsd$REEF_ZONE=="Protected Slope","Forereef",as.character(wsd$REEF_ZONE))
wsd<-subset(wsd,REEF_ZONE=="Forereef")

wsd$STRATANAME<-paste(wsd$SEC_NAME,wsd$REEF_ZONE,wsd$DEPTH_BIN,sep="_") #Create stratum
head(wsd)


wsd$ANALYSIS_SEC<-wsd$SEC_NAME
wsd$ANALYSIS_YEAR<-wsd$OBS_YEAR

data.cols<-c("MEAN_SH","SD_SH_DIFF")

### CALCULATE MEAN AND VARIANCE WITHIN STRATA ###
SPATIAL_POOLING_BASE<-c("REGION","ISLAND", "ANALYSIS_SEC", "REEF_ZONE", "STRATANAME","DEPTH_BIN")    

#generate within strata means and vars
POOLING_LEVEL<-c(SPATIAL_POOLING_BASE)
dps<-Calc_PerStrata(wsd, data.cols, c(POOLING_LEVEL, "AREA_HA"))
head(dps$Mean)

###### REMOVE STRATA with N=1 (cannot pool those up)
dps$Mean<-dps$Mean[dps$Mean$N>1,]
dps$SampleVar<-dps$SampleVar[dps$SampleVar$N>1,]
dps$SampleSE<-dps$SampleSE[dps$SampleSE$N>1,]

# e.g. SAVE BY ISLAND AND REEF_ZONE PER YEAR
OUTPUT_LEVEL<-c("REGION","ISLAND","ANALYSIS_SEC","STRATANAME","DEPTH_BIN") 
dpst<-Calc_Pooled_Simple(dps$Mean, dps$SampleVar, data.cols, OUTPUT_LEVEL, "AREA_HA");dpst<-as.data.frame(dpst)

#Clean up- remove SE columns and remove "Mean" from column names
dpst<-dpst %>% dplyr::select(Mean.REGION:Mean.MEAN_SH,PooledSE.MEAN_SH,-c(Mean.N))

dpst<-dpst %>%
  dplyr::rename_all(funs(stringr::str_replace_all(., "Mean.", "")))

dpst<-dpst %>%
  dplyr::rename_all(funs(stringr::str_replace_all(., "Pooled", "")))

head(dpst)

colnames(dpst)[which(colnames(dpst) == 'ANALYSIS_SEC')]<-"SEC_NAME" 
colnames(dpst)[which(colnames(dpst) == 'SE.MEAN_SH')]<-"SE_MEAN_SH" 

sh_sum<-dpst
head(sh_sum)


# Habitat code ------------------------------------------------------------
# in order to convert habitat type to continuous factor- calculate % of sites in a stratum that are carbonate reef, basalt and sand/rubble

#Simplify habitat codes into 3 groups (carbonate, basalt, sand/rubble)
sm_env<-sm_env %>% mutate(Hab_simple=recode(HABITAT_CODE, 
                                                  `AGR`="Carbonate",
                                                  `APR`="Carbonate",
                                                  `APS`="Carbonate",
                                                  `WAL`="Carbonate",
                                                  `PAV`="Basalt",
                                                  `PPR`="Basalt",
                                                  `RRB`="Sand_Rubble",
                                                  `ROB`="Basalt",
                                                  `SAG`="Carbonate",
                                                  `SCR`="Sand_Rubble",
                                                  `PSC`="Sand_Rubble"))

hab_sum<-sm_env %>%
    group_by(REGION,ISLAND,ANALYSIS_SEC,STRATANAME,Hab_simple) %>%
    summarize(n=length(unique(SITEVISITID)))


sm_env %>%
  group_by(REGION) %>%
  summarize(n=length(unique(SITEVISITID)))

site_sum<-sm_env %>%
  group_by(REGION,ISLAND,ANALYSIS_SEC,STRATANAME) %>%
  summarize(ntot=length(unique(SITEVISITID)))

hab_sum<-left_join(hab_sum,site_sum)
hab_sum$prop<-hab_sum$n/hab_sum$ntot*100
hab_sum<-subset(hab_sum,select= -c(n,ntot))
hab_sum$Hab_simple = paste(hab_sum$Hab_simple,"HC",sep = "_")

head(hab_sum)


hab_sum_w<-hab_sum %>%
  spread(Hab_simple,prop)
head(hab_sum_w)


# MEAN DEPTH --------------------------------------------------------------

jwd_siteS$MidDepth<-(jwd_siteS$MAX_DEPTH_M+jwd_siteS$MIN_DEPTH_M)/2
depth_sum<-jwd_siteS %>%
  group_by(REGION,ISLAND,ANALYSIS_SEC,STRATANAME) %>%
  summarize(MeanDepth=mean(MidDepth,na.rm=T),MeanMaxDepth=mean(MAX_DEPTH_M,na.rm=T))


# LATITUDE ----------------------------------------------------------------
# Calculate mean latitutde/stratum
#Use projected coordinates (utm) instead of unprojected coordinates (lat/lon). 
#Use"weighted mean" (i.e, latitudinal gravity center) instead of the arithmetic mean.

#Convert unprojected to projected coordinates
islands = unique(jwd_siteS$ISLAND)#Create vector of island names from your dataframe

df_utm = NULL #create empty dataframe

for (isl in 1:length(islands)) {
  
  df_i = jwd_siteS %>% subset(ISLAND %in% islands[[isl]])
  
  zone <- (floor((df_i$LONGITUDE[1] + 180)/6) %% 60) + 1 #identify UTM zone for each island
  xy_utm = as.data.frame(cbind(utm = project(as.matrix(df_i[, c("LONGITUDE", "LATITUDE")]), paste0("+proj=utm +units=km +zone=", zone)))) #convert to projected coordinates
  colnames(xy_utm) = c("X", "Y")
  df_i = cbind(df_i, xy_utm) #add the new projected coordinates back into original dataframe
  df_utm = rbind(df_utm, df_i) #do this for each island
  
}


#df=jwd_siteS
df=df_utm

# df_sub = as.data.frame(str_match(df$STRATANAME, "^(.*)_(.*)$")[,-1])[2]
# colnames(df_sub) = "depth_strata"
# df = cbind(df, df_sub)

# lat_mean = df %>%
#   group_by(REGION,OBS_YEAR,ISLAND,ANALYSIS_SEC,STRATANAME)%>%
#   mutate(depth_strata_sum = n())%>%
#   summarize(lat_strata_weighted_mean = weighted.mean(LATITUDE, depth_strata_sum))
# View(df.)

lat_sum = df %>%
  group_by(REGION,ISLAND,ANALYSIS_SEC,STRATANAME)%>%
  mutate(depth_strata_sum = n())%>%
  summarize(utmlat_strata_weighted_mean = weighted.mean(X, depth_strata_sum),
            lat_strata_weighted_mean = weighted.mean(LATITUDE, depth_strata_sum))
View(lat_sum)


# model = gam(JuvColDen ~ + s(lat_strata_weighted_mean, k = 3),
#             family = "tw(theta = NULL, link = 'log',a = 1.01, b = 1.99)",
#             data = df,
#             weights = df$weight,
#             gamma = 1.4)
# 
# plot(model)
# 
# 
# model = gam(JuvColDen ~ + s(lat_depth_weighted_mean, k = 3),
#             family = "tw(theta = NULL, link = 'log',a = 1.01, b = 1.99)",
#             data = df,
#             #weights = df$weight,
#             gamma = 1.4)
# 
# plot(model)



# BENTHIC COVER -----------------------------------------------------------

cover<-left_join(cover3,cover1[,c("SITEVISITID","CORAL","MA","TURF","SED")])  
nrow(cover);View(cover)

#Create summarized benthic columns
cover$RUBBLE<-cover$CCAR+cover$RUB+cover$TURFR
cover$TURF_BARE<-cover$TURFH+cover$HARD
cover$CCA<-cover$CCAH
cover$SAND<-cover$SED
cover$TURF<-cover$TURFH

#Consolidate columns and combine rubble and sand
cols<-c("SITEVISITID", "OBS_YEAR", "REGION", "ISLAND","SEC_NAME", "SITE","REEF_ZONE",
        "DEPTH_BIN", "LATITUDE", "LONGITUDE","CORAL","CCA","RUBBLE","SAND","TURF","MA")
cover<-cover[,cols]
cover$SAND_RUB<-cover$RUBBLE+cover$SAND
head(cover)

cover$STRATANAME<-paste(cover$SEC_NAME,cover$REEF_ZONE,cover$DEPTH_BIN,sep="_") #Create stratum

#We are missing some cover data from some benthic sites so use all benthic and fish sites
#Merge together wsd and sectors
wsd<-left_join(cover,sectors[,c("SEC_NAME","REEF_ZONE","DEPTH_BIN","AREA_HA")]);nrow(wsd);head(wsd)

#Subset just Forereef sites
wsd$REEF_ZONE<-ifelse(wsd$REEF_ZONE=="Protected Slope","Forereef",as.character(wsd$REEF_ZONE))
wsd<-subset(wsd,REEF_ZONE=="Forereef")

wsd$STRATANAME<-paste(wsd$SEC_NAME,wsd$REEF_ZONE,wsd$DEPTH_BIN,sep="_") #Create stratum
head(wsd)
wsd$ANALYSIS_SEC<-wsd$SEC_NAME
wsd$ANALYSIS_YEAR<-wsd$OBS_YEAR

data.cols<-c("CORAL","CCA","RUBBLE","SAND","TURF","MA","SAND_RUB")

### CALCULATE MEAN AND VARIANCE WITHIN STRATA ###
SPATIAL_POOLING_BASE<-c("REGION","ISLAND", "ANALYSIS_SEC", "REEF_ZONE", "STRATANAME","DEPTH_BIN")    
ADDITIONAL_POOLING_BY<-c("ANALYSIS_YEAR")                                    # additional fields that we want to break data at, but which do not relate to physical areas (eg survey year or method)

#generate within strata means and vars
POOLING_LEVEL<-c(SPATIAL_POOLING_BASE, ADDITIONAL_POOLING_BY)
dps<-Calc_PerStrata(wsd, data.cols, c(POOLING_LEVEL, "AREA_HA"))
head(dps$Mean)

###### REMOVE STRATA with N=1 (cannot pool those up)
dps$Mean<-dps$Mean[dps$Mean$N>1,]
dps$SampleVar<-dps$SampleVar[dps$SampleVar$N>1,]
dps$SampleSE<-dps$SampleSE[dps$SampleSE$N>1,]

# e.g. SAVE BY ISLAND AND REEF_ZONE PER YEAR
OUTPUT_LEVEL<-c("REGION","ISLAND","ANALYSIS_SEC","STRATANAME","DEPTH_BIN","ANALYSIS_YEAR") 
dpst<-Calc_Pooled_Simple(dps$Mean, dps$SampleVar, data.cols, OUTPUT_LEVEL, "AREA_HA");dpst<-as.data.frame(dpst)

#Clean up- remove SE columns and remove "Mean" from column names
dpst<-dpst %>% dplyr::select(Mean.REGION:Mean.SAND_RUB,-c(Mean.N))

dpst<-dpst %>%
  dplyr::rename_all(funs(stringr::str_replace_all(., "Mean.", "")))
head(dpst)

cover_sum<-dpst
head(cover_sum)

cover_sum3<-cover_sum

cover_sum2<-cover_sum%>% dplyr::filter(ANALYSIS_YEAR>2013)

# #Generate a list of Regions and years to include in final summary
REGION<-c("NWHI","MHI","PHOENIX","LINE","SMARIAN","NMARIAN","SAMOA","WAKE")
ANALYSIS_YEAR<-c("2016","2019","2018","2018","2017","2017","2018","2017")
keep<-as.data.frame(cbind(REGION,ANALYSIS_YEAR))

keep$r_y<-paste(keep$REGION,keep$ANALYSIS_YEAR,sep = "_")

#ONly include years where sites were most recently surveyed for each region
cover_sum$r_y<-paste(cover_sum$REGION,cover_sum$ANALYSIS_YEAR,sep = "_")
cover_sum<-cover_sum[cover_sum$r_y %in% c(keep$r_y),]


#CONVERT TO WIDE THEN CALCULATE DELTA CHANGE in cover
#Calculate absolute % cover change between years
CalcDeltaCover<-function(data,data.col,metric_name="DeltaCCA"){
  data$D_COL<-data[,data.col]
  #Convert long to wide
  wide<-data %>%
    dplyr::select(REGION,ISLAND,ANALYSIS_YEAR,ANALYSIS_SEC,STRATANAME,DEPTH_BIN,D_COL) %>%
    pivot_wider(names_from = ANALYSIS_YEAR,values_from = D_COL)
  
  colnames(wide)[6:11] <- paste("t", colnames(wide[,c(6:11)]), sep = "") #add "t" to year column
  
  wide$DeltaCover<-NULL
  for (i in c(1:nrow(wide))){ #opening brace
    if(wide$REGION[i] %in% c("SMARIAN","NMARIAN","WAKE")){ #c&p
      wide$DeltaCover[i] = wide$t2017[i]-wide$t2014[i] #c&p
    } #c&P
    if(wide$REGION[i] %in% c("SAMOA","LINE","PHOENIX")){ #c&p
      wide$DeltaCover[i] = wide$t2018[i]-wide$t2015[i] #c&p
    } #c&P
    if(wide$REGION[i] == "MHI"){ #c&p
      wide$DeltaCover[i] = wide$t2019[i]-wide$t2016[i] #c&p
    } #c&P
    if(wide$REGION[i] == "NWHI"){ #c&p
      wide$DeltaCover[i] = wide$t2016[i]-wide$t2014[i] #c&p
    } #c&P
  } #closing curly brace for entire forloop
  colnames(wide)[which(colnames(wide) == 'DeltaCover')] <- metric_name #change group to whatever your grouping field is.
  
  wide<- dplyr::select(wide,-c(t2014:t2019))
  return(wide)
}
#Calc Delta CCA and Coral cover
CCA_sumW<-CalcDeltaCover(cover_sum3,"CCA","Delta_CCA");head(CCA_sumW)
Coral_sumW<-CalcDeltaCover(cover_sum3,"CORAL","Delta_CORAL");head(Coral_sumW)
Turf_sumW<-CalcDeltaCover(cover_sum3,"TURF","Delta_TURF");head(Turf_sumW)
SandRub_sumW<-CalcDeltaCover(cover_sum3,"SAND_RUB","Delta_SAND_RUB");head(SandRub_sumW)

delcover<- CCA_sumW   %>%    
  left_join(Coral_sumW) %>%
  left_join(Turf_sumW) %>%
  left_join(SandRub_sumW)

head(delcover)
nrow(delcover)
nrow(CCA_sumW)

cover_sum2$ANALYSIS_YEAR<-as.factor(cover_sum2$ANALYSIS_YEAR)

p<-ggplot(subset(cover_sum3,REGION=="SAMOA"),aes(x=ANALYSIS_YEAR,y=CCA,fill=DEPTH_BIN))+
    geom_bar(stat='identity')+
    facet_wrap(~ANALYSIS_SEC,scale='free_x')+
    theme_bw() +
    theme(
      axis.text.x = element_text(angle = 90)
      ,plot.background = element_blank()
      ,panel.grid.major = element_blank()
      ,panel.grid.minor = element_blank()
      ,axis.ticks.x = element_blank() # no x axis ticks
      ,axis.title.x = element_text( vjust = -.0001) # adjust x axis to lower the same amount as the genus labels
      ,legend.position="bottom")
p

p<-ggplot(subset(cover_sum2,REGION=="MHI"),aes(x=ANALYSIS_YEAR,y=CCA,fill=DEPTH_BIN))+
  geom_bar(stat='identity')+
  facet_wrap(~ANALYSIS_SEC,scale='free_x')+
  theme_bw() +
  theme(
    axis.text.x = element_text(angle = 90)
    ,plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,axis.ticks.x = element_blank() # no x axis ticks
    ,axis.title.x = element_text( vjust = -.0001) # adjust x axis to lower the same amount as the genus labels
    ,legend.position="bottom")
p

p<-ggplot(subset(cover_sum2,REGION=="LINE"),aes(x=ANALYSIS_YEAR,y=CCA,fill=DEPTH_BIN))+
  geom_bar(stat='identity')+
  facet_wrap(~ANALYSIS_SEC,scale='free_x')+
  theme_bw() +
  theme(
    axis.text.x = element_text(angle = 90)
    ,plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,axis.ticks.x = element_blank() # no x axis ticks
    ,axis.title.x = element_text( vjust = -.0001) # adjust x axis to lower the same amount as the genus labels
    ,legend.position="bottom")
p


#Plot delta cover
#convert wide to long
library(stringr)
delcoverN<-delcover %>% 
  rename_all(~stringr::str_replace(.,"Delta_",""))

delcoverL<-pivot_longer(delcoverN,
                        cols = CCA:SAND_RUB,
                        names_to = "Category",
                        values_to = "DeltaCover")

#Calculate Island-level means- These are unweighted and therefore incorrect- just for curiosity sake
# delcover_sum<-delcoverL %>%
#   group_by(REGION,ISLAND,Category) %>%
#   summarize(MeanDelta=mean(DeltaCover),na.rm=T),SEDelta=mean(MAX_DEPTH_M,na.rm=T))

p<-ggplot(delcoverL,aes(x=Category,y=DeltaCover,fill=Category))+
  geom_boxplot()+
  geom_hline(yintercept=1)+
  facet_wrap(~REGION)+
  theme_bw() +
  theme(
    axis.text.x = element_text(angle = 90)
    ,plot.background = element_blank()
    ,panel.grid.major = element_blank()
    ,panel.grid.minor = element_blank()
    ,axis.ticks.x = element_blank() # no x axis ticks
    ,axis.title.x = element_text( vjust = -.0001) # adjust x axis to lower the same amount as the genus labels
    ,legend.position="bottom")
p



# Combine all summaries into 1 dataframe ----------------------------------
all_pred<- d_strat   %>%    
      left_join(cover_sum) %>%
      left_join(delcover) %>%
      left_join(depth_sum) %>%
      left_join(hab_sum_w) %>%
      left_join(lat_sum) %>%
      left_join(eds_sum) %>%
      left_join(sh_sum) %>%
      left_join(humans_sum) %>%
      left_join(wave_sum)

head(all_pred)
View(all_pred)

write.csv(all_pred, file="T:/Benthic/Projects/Juvenile Project/JuvDeltaDen_Pred.csv",row.names = F)


# #Change specific sector names to match the sector shape file polygons
# dpst$SEC_NAME[dpst$SEC_NAME == "HAW_HAMAKUA"] <- "HAW_HAMAK"
# dpst$SEC_NAME[dpst$SEC_NAME == "GUA_PATI_POINT"] <- "GUA_PATI_PT"
# 
# #Separate strata to create sector maps in Arc
# sh<-subset(dpst,DEPTH_BIN=="Shallow")
# m<-subset(dpst,DEPTH_BIN=="Mid")
# d<-subset(dpst,DEPTH_BIN=="Deep")
# 
# write.csv(sh, file="C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Juvenile Project/Predictor Variables/JuvProject_SubstrateHeight_Shallow.csv",row.names = F)
# write.csv(m, file="C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Juvenile Project/Predictor Variables/JuvProject_SubstrateHeight_Mid.csv",row.names = F)
# write.csv(d, file="C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Juvenile Project/Predictor Variables/JuvProject_SubstrateHeight_Deep.csv",row.names = F)
# 

#Plot mean values for predictors by sector and/or stratum to make sure values make sense

all_pred<-subset(all_pred,select=-c(ANALYSIS_SEC,ANALYSIS_YEAR,years,DeltaDen))
all_pred_l<- all_pred %>% pivot_longer(
  cols = DeltaDen_mo:MeanWavePower,
  names_to = "METRIC",
  values_to = "Value")


Plot_Preds<-function(data,metric_name="MeanWavePower"){
  data$METRIC=data[,metric_name]
  # data$METRIC<-data$metric_name
  p<-ggplot(data,aes(x=SEC_NAME,y=METRIC,fill=DEPTH_BIN))+
    geom_bar(position="stack", stat="identity")+
    facet_wrap(~REGION,scale='free_x')+
    theme_bw() +
    theme(
      axis.text.x = element_text(angle = 90)
      ,plot.background = element_blank()
      ,panel.grid.major = element_blank()
      ,panel.grid.minor = element_blank()
      ,axis.ticks.x = element_blank() # no x axis ticks
      ,axis.title.x = element_text( vjust = -.0001) # adjust x axis to lower the same amount as the genus labels
      ,legend.position="bottom")
 return(p) 
}


WavePlot<-Plot_Preds(all_pred,"MeanWavePower");WavePlot
CORALPlot<-Plot_Preds(all_pred,"CORAL");CORALPlot
CCAPlot<-Plot_Preds(all_pred,"CCA");CCAPlot
BasaltPlot<-Plot_Preds(all_pred,"Basalt_HC");BasaltPlot
MeanMaxDHWPlot<-Plot_Preds(all_pred,"MeanMaxDHW10");MeanMaxDHWPlot
WavePlot<-Plot_Preds(all_pred,"MeanWavePower");WavePlot

