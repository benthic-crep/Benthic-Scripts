head(gen)
df<-left_join(df,seclu)
df<-left_join(df,taxlu)
View(df)
df<-df[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE", "SECTORNAME","SECTOR","DB_RZ","ANALYSIS_YEAR","n","GENUS_CODE","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")]
View(df)
write.csv(df,file="T:/Benthic/Data/Data Requests/NCRMPviztool_genus_demographics.csv",row.names = F)
levels(as.factor(taxlu$SPCODE))
s<-filter(gen,GENUS_CODE=="SSSS")
head(s)
df<-rbind(df,s)
#read in GENUSCODE and TAXONCODE strata summary tables from REA Coral Demographic_CalcPooled.R script
# This script combines the adult taxoncode and juvenile genus level data & adds names for regions, islands, sectors, taxon
rm(list=ls())
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
#Read in data
tax<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_TAXONCODE.csv")
gen<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
#Read in look up tables
seclu<-read.csv("T:/Benthic/Data/Lookup Tables/SectorNamelookup.csv")
taxlu<-read.csv("T:/Benthic/Data/Lookup Tables/2013-20_Taxa_MASTER.csv")
#Merge juvenile genus level data and adult taxoncode data
#I think this is going to be confusing for people they will see 0 in the adult genus data, but this isn't accurate- it's just because there are recorded species within a genus
#I've decided to just provide genus-level data
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","TAXONCODE","n","AdColDen","SE_AdColDen",
#              "AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
#
# tax<-tax %>% dplyr::select(data.cols)
#
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","JuvColDen","SE_JuvColDen")
#
# gen<-gen %>% dplyr::select(data.cols)
#
# #Change GENUS_CODE to TAXONCODE so we can merge gen and tax together
# colnames(gen)[which(names(gen)=="GENUS_CODE")]<-"TAXONCODE"
#
# df<-full_join(gen,tax)
# df$SPCODE<-df$TAXONCODE
#
# #merge with taxa look up table and remove taxa that aren't found in a given region
# taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
# df$sry<-paste(df$SPCODE,df$REGION,df$ANALYSIS_YEAR,sep="_")
#
# test<-df %>%
#     dplyr::filter(sry %in% taxlu$sry)
#Prep genus-level data
data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","n","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
gen<-gen %>% dplyr::select(data.cols)
gen$SPCODE<-gen$GENUS_CODE
#merge with taxa look up table and remove taxa that aren't found in a given region
taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
gen$sry<-paste(gen$SPCODE,gen$REGION,gen$ANALYSIS_YEAR,sep="_")
s<-filter(gen,GENUS_CODE=="SSSS")
df<-gen %>%
dplyr::filter(sry %in% taxlu$sry)
df<-rbind(df,s)
head(df)
tail(d)
tail(df)
#read in GENUSCODE and TAXONCODE strata summary tables from REA Coral Demographic_CalcPooled.R script
# This script combines the adult taxoncode and juvenile genus level data & adds names for regions, islands, sectors, taxon
rm(list=ls())
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
#Read in data
tax<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_TAXONCODE.csv")
gen<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
#Read in look up tables
seclu<-read.csv("T:/Benthic/Data/Lookup Tables/SectorNamelookup.csv")
taxlu<-read.csv("T:/Benthic/Data/Lookup Tables/2013-20_Taxa_MASTER.csv")
#Merge juvenile genus level data and adult taxoncode data
#I think this is going to be confusing for people they will see 0 in the adult genus data, but this isn't accurate- it's just because there are recorded species within a genus
#I've decided to just provide genus-level data
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","TAXONCODE","n","AdColDen","SE_AdColDen",
#              "AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
#
# tax<-tax %>% dplyr::select(data.cols)
#
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","JuvColDen","SE_JuvColDen")
#
# gen<-gen %>% dplyr::select(data.cols)
#
# #Change GENUS_CODE to TAXONCODE so we can merge gen and tax together
# colnames(gen)[which(names(gen)=="GENUS_CODE")]<-"TAXONCODE"
#
# df<-full_join(gen,tax)
# df$SPCODE<-df$TAXONCODE
#
# #merge with taxa look up table and remove taxa that aren't found in a given region
# taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
# df$sry<-paste(df$SPCODE,df$REGION,df$ANALYSIS_YEAR,sep="_")
#
# test<-df %>%
#     dplyr::filter(sry %in% taxlu$sry)
#Prep genus-level data
data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","n","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
gen<-gen %>% dplyr::select(data.cols)
gen$SPCODE<-gen$GENUS_CODE
#merge with taxa look up table and remove taxa that aren't found in a given region
taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
gen$sry<-paste(gen$SPCODE,gen$REGION,gen$ANALYSIS_YEAR,sep="_")
s<-filter(gen,GENUS_CODE=="SSSS")
df<-gen %>%
dplyr::filter(sry %in% taxlu$sry)
df<-rbind(df,s)
head(gen)
df<-left_join(df,seclu)
df<-left_join(df,taxlu)
View(df)
df<-df[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE", "SECTORNAME","SECTOR","DB_RZ","ANALYSIS_YEAR","n","GENUS_CODE","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")]
df$REGIONNAME<-ifelse(df$SECTOR=="AGS","Mariana Archipelago",df$REGIONNAME)
df$ISLAND<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$ISLAND)
df$ISLANDCODE<-ifelse(df$SECTOR=="AGS","AGS",df$ISLANDCODE)
df$SECTORNAME<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$SECTORNAME)
write.csv(df,file="T:/Benthic/Data/Data Requests/NCRMPviztool_genus_demographics.csv",row.names = F)
head(df)
df<-left_join(df,taxlu)
head(df)
#read in GENUSCODE and TAXONCODE strata summary tables from REA Coral Demographic_CalcPooled.R script
# This script combines the adult taxoncode and juvenile genus level data & adds names for regions, islands, sectors, taxon
rm(list=ls())
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
#Read in data
tax<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_TAXONCODE.csv")
gen<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
#Read in look up tables
seclu<-read.csv("T:/Benthic/Data/Lookup Tables/SectorNamelookup.csv")
taxlu<-read.csv("T:/Benthic/Data/Lookup Tables/2013-20_Taxa_MASTER.csv")
#Merge juvenile genus level data and adult taxoncode data
#I think this is going to be confusing for people they will see 0 in the adult genus data, but this isn't accurate- it's just because there are recorded species within a genus
#I've decided to just provide genus-level data
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","TAXONCODE","n","AdColDen","SE_AdColDen",
#              "AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
#
# tax<-tax %>% dplyr::select(data.cols)
#
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","JuvColDen","SE_JuvColDen")
#
# gen<-gen %>% dplyr::select(data.cols)
#
# #Change GENUS_CODE to TAXONCODE so we can merge gen and tax together
# colnames(gen)[which(names(gen)=="GENUS_CODE")]<-"TAXONCODE"
#
# df<-full_join(gen,tax)
# df$SPCODE<-df$TAXONCODE
#
# #merge with taxa look up table and remove taxa that aren't found in a given region
# taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
# df$sry<-paste(df$SPCODE,df$REGION,df$ANALYSIS_YEAR,sep="_")
#
# test<-df %>%
#     dplyr::filter(sry %in% taxlu$sry)
#Prep genus-level data
data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","n","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
gen<-gen %>% dplyr::select(data.cols)
gen$SPCODE<-gen$GENUS_CODE
#merge with taxa look up table and remove taxa that aren't found in a given region
taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
gen$sry<-paste(gen$SPCODE,gen$REGION,gen$ANALYSIS_YEAR,sep="_")
s<-filter(gen,GENUS_CODE=="SSSS")
df<-gen %>%
dplyr::filter(sry %in% taxlu$sry)
df<-rbind(df,s)
head(gen)
df<-left_join(df,seclu)
df<-left_join(df,taxlu)
head(df)
df<-df[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE", "SECTORNAME","SECTOR","DB_RZ","ANALYSIS_YEAR","n","GENUS_CODE","TAXON_NAME","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")]
df$REGIONNAME<-ifelse(df$SECTOR=="AGS","Mariana Archipelago",df$REGIONNAME)
df$ISLAND<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$ISLAND)
df$ISLANDCODE<-ifelse(df$SECTOR=="AGS","AGS",df$ISLANDCODE)
df$SECTORNAME<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$SECTORNAME)
write.csv(df,file="T:/Benthic/Data/Data Requests/NCRMPviztool_genus_demographics.csv",row.names = F)
#read in GENUSCODE and TAXONCODE strata summary tables from REA Coral Demographic_CalcPooled.R script
# This script combines the adult taxoncode and juvenile genus level data & adds names for regions, islands, sectors, taxon
rm(list=ls())
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
#Read in data
tax<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_TAXONCODE.csv")
gen<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
#Read in look up tables
seclu<-read.csv("T:/Benthic/Data/Lookup Tables/SectorNamelookup.csv")
taxlu<-read.csv("T:/Benthic/Data/Lookup Tables/2013-20_Taxa_MASTER.csv")
#Merge juvenile genus level data and adult taxoncode data
#I think this is going to be confusing for people they will see 0 in the adult genus data, but this isn't accurate- it's just because there are recorded species within a genus
#I've decided to just provide genus-level data
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","TAXONCODE","n","AdColDen","SE_AdColDen",
#              "AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
#
# tax<-tax %>% dplyr::select(data.cols)
#
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","JuvColDen","SE_JuvColDen")
#
# gen<-gen %>% dplyr::select(data.cols)
#
# #Change GENUS_CODE to TAXONCODE so we can merge gen and tax together
# colnames(gen)[which(names(gen)=="GENUS_CODE")]<-"TAXONCODE"
#
# df<-full_join(gen,tax)
# df$SPCODE<-df$TAXONCODE
#
# #merge with taxa look up table and remove taxa that aren't found in a given region
# taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
# df$sry<-paste(df$SPCODE,df$REGION,df$ANALYSIS_YEAR,sep="_")
#
# test<-df %>%
#     dplyr::filter(sry %in% taxlu$sry)
#Prep genus-level data
data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","n","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
gen<-gen %>% dplyr::select(data.cols)
gen$SPCODE<-gen$GENUS_CODE
#merge with taxa look up table and remove taxa that aren't found in a given region
taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
gen$sry<-paste(gen$SPCODE,gen$REGION,gen$ANALYSIS_YEAR,sep="_")
s<-filter(gen,GENUS_CODE=="SSSS")
df<-gen %>%
dplyr::filter(sry %in% taxlu$sry)
df<-rbind(df,s)
head(gen)
df<-left_join(df,seclu)
df<-left_join(df,taxlu)
head(df)
#df<-df[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE", "SECTORNAME","SECTOR","DB_RZ","ANALYSIS_YEAR","n","GENUS_CODE","TAXON_NAME","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen","AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")]
df$REGIONNAME<-ifelse(df$SECTOR=="AGS","Mariana Archipelago",df$REGIONNAME)
df$ISLAND<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$ISLAND)
df$ISLANDCODE<-ifelse(df$SECTOR=="AGS","AGS",df$ISLANDCODE)
df$SECTORNAME<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$SECTORNAME)
write.csv(df,file="T:/Benthic/Data/Data Requests/NCRMPviztool_genus_demographics.csv",row.names = F)
gen<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
View(gen)
#read in GENUSCODE and TAXONCODE strata summary tables from REA Coral Demographic_CalcPooled.R script
# This script combines the adult taxoncode and juvenile genus level data & adds names for regions, islands, sectors, taxon
rm(list=ls())
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
#Read in data
tax<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_TAXONCODE.csv")
gen<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
#Read in look up tables
seclu<-read.csv("T:/Benthic/Data/Lookup Tables/SectorNamelookup.csv")
taxlu<-read.csv("T:/Benthic/Data/Lookup Tables/2013-20_Taxa_MASTER.csv")
#Merge juvenile genus level data and adult taxoncode data
#I think this is going to be confusing for people they will see 0 in the adult genus data, but this isn't accurate- it's just because there are recorded species within a genus
#I've decided to just provide genus-level data
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","TAXONCODE","n","AdColDen","SE_AdColDen",
#              "AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
#
# tax<-tax %>% dplyr::select(data.cols)
#
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","JuvColDen","SE_JuvColDen")
#
# gen<-gen %>% dplyr::select(data.cols)
#
# #Change GENUS_CODE to TAXONCODE so we can merge gen and tax together
# colnames(gen)[which(names(gen)=="GENUS_CODE")]<-"TAXONCODE"
#
# df<-full_join(gen,tax)
# df$SPCODE<-df$TAXONCODE
#
# #merge with taxa look up table and remove taxa that aren't found in a given region
# taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
# df$sry<-paste(df$SPCODE,df$REGION,df$ANALYSIS_YEAR,sep="_")
#
# test<-df %>%
#     dplyr::filter(sry %in% taxlu$sry)
#Prep genus-level data
data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","n","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
gen<-gen %>% dplyr::select(data.cols)
gen$SPCODE<-gen$GENUS_CODE
head(gen)
#merge with taxa look up table and remove taxa that aren't found in a given region
taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
gen$sry<-paste(gen$SPCODE,gen$REGION,gen$ANALYSIS_YEAR,sep="_")
s<-filter(gen,GENUS_CODE=="SSSS")
df<-gen %>%
dplyr::filter(sry %in% taxlu$sry)
df<-rbind(df,s)
View(df)
tails(df)
tail(df)
head(gen)
df<-left_join(df,seclu)
head(df)
df<-gen %>%
dplyr::filter(sry %in% taxlu$sry)
df<-rbind(df,s)
df<-left_join(df,taxlu)
head(df)
head(seclu)
colnames(seclu)
seclu<-unique(seclu[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE","SECTORNAME","SECTOR")])
head(seclu)
#read in GENUSCODE and TAXONCODE strata summary tables from REA Coral Demographic_CalcPooled.R script
# This script combines the adult taxoncode and juvenile genus level data & adds names for regions, islands, sectors, taxon
rm(list=ls())
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
#Read in data
tax<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_TAXONCODE.csv")
gen<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
#Read in look up tables
seclu<-read.csv("T:/Benthic/Data/Lookup Tables/SectorNamelookup.csv")
taxlu<-read.csv("T:/Benthic/Data/Lookup Tables/2013-20_Taxa_MASTER.csv")
seclu<-unique(seclu[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE","SECTORNAME","SECTOR")])
#Merge juvenile genus level data and adult taxoncode data
#I think this is going to be confusing for people they will see 0 in the adult genus data, but this isn't accurate- it's just because there are recorded species within a genus
#I've decided to just provide genus-level data
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","TAXONCODE","n","AdColDen","SE_AdColDen",
#              "AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
#
# tax<-tax %>% dplyr::select(data.cols)
#
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","JuvColDen","SE_JuvColDen")
#
# gen<-gen %>% dplyr::select(data.cols)
#
# #Change GENUS_CODE to TAXONCODE so we can merge gen and tax together
# colnames(gen)[which(names(gen)=="GENUS_CODE")]<-"TAXONCODE"
#
# df<-full_join(gen,tax)
# df$SPCODE<-df$TAXONCODE
#
# #merge with taxa look up table and remove taxa that aren't found in a given region
# taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
# df$sry<-paste(df$SPCODE,df$REGION,df$ANALYSIS_YEAR,sep="_")
#
# test<-df %>%
#     dplyr::filter(sry %in% taxlu$sry)
#Prep genus-level data
data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","n","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
gen<-gen %>% dplyr::select(data.cols)
gen$SPCODE<-gen$GENUS_CODE
#merge with taxa look up table and remove taxa that aren't found in a given region
taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
gen$sry<-paste(gen$SPCODE,gen$REGION,gen$ANALYSIS_YEAR,sep="_")
s<-filter(gen,GENUS_CODE=="SSSS")
df<-gen %>%
dplyr::filter(sry %in% taxlu$sry)
df<-rbind(df,s)
head(gen)
df<-left_join(df,seclu)
df<-left_join(df,taxlu)
head(df)
#df<-df[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE", "SECTORNAME","SECTOR","DB_RZ","ANALYSIS_YEAR","n","GENUS_CODE","TAXON_NAME","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen","AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")]
df$REGIONNAME<-ifelse(df$SECTOR=="AGS","Mariana Archipelago",df$REGIONNAME)
df$ISLAND<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$ISLAND)
df$ISLANDCODE<-ifelse(df$SECTOR=="AGS","AGS",df$ISLANDCODE)
df$SECTORNAME<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$SECTORNAME)
write.csv(df,file="T:/Benthic/Data/Data Requests/NCRMPviztool_genus_demographics.csv",row.names = F)
#read in GENUSCODE and TAXONCODE strata summary tables from REA Coral Demographic_CalcPooled.R script
# This script combines the adult taxoncode and juvenile genus level data & adds names for regions, islands, sectors, taxon
rm(list=ls())
#LOAD LIBRARY FUNCTIONS ...
source("C:/Users/Courtney.S.Couch/Documents/GitHub/Benthic-Scripts/Functions/Benthic_Functions_newApp_vTAOfork.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/core_functions.R")
source("C:/Users/Courtney.S.Couch/Documents/GitHub/fish-paste/lib/GIS_functions.R")
#Read in data
tax<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_TAXONCODE.csv")
gen<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
#Read in look up tables
seclu<-read.csv("T:/Benthic/Data/Lookup Tables/SectorNamelookup.csv")
taxlu<-read.csv("T:/Benthic/Data/Lookup Tables/2013-20_Taxa_MASTER.csv")
seclu<-unique(seclu[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE","SECTORNAME","SECTOR")])
#Merge juvenile genus level data and adult taxoncode data
#I think this is going to be confusing for people they will see 0 in the adult genus data, but this isn't accurate- it's just because there are recorded species within a genus
#I've decided to just provide genus-level data
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","TAXONCODE","n","AdColDen","SE_AdColDen",
#              "AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
#
# tax<-tax %>% dplyr::select(data.cols)
#
# data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","JuvColDen","SE_JuvColDen")
#
# gen<-gen %>% dplyr::select(data.cols)
#
# #Change GENUS_CODE to TAXONCODE so we can merge gen and tax together
# colnames(gen)[which(names(gen)=="GENUS_CODE")]<-"TAXONCODE"
#
# df<-full_join(gen,tax)
# df$SPCODE<-df$TAXONCODE
#
# #merge with taxa look up table and remove taxa that aren't found in a given region
# taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
# df$sry<-paste(df$SPCODE,df$REGION,df$ANALYSIS_YEAR,sep="_")
#
# test<-df %>%
#     dplyr::filter(sry %in% taxlu$sry)
#Prep genus-level data
data.cols<-c("REGION","ISLAND","SECTOR","ANALYSIS_YEAR","DB_RZ","GENUS_CODE","n","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen",
"AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")
gen<-gen %>% dplyr::select(data.cols)
gen$SPCODE<-gen$GENUS_CODE
#merge with taxa look up table and remove taxa that aren't found in a given region
taxlu$sry<-paste(taxlu$SPCODE,taxlu$REGION,taxlu$OBS_YEAR,sep="_")
gen$sry<-paste(gen$SPCODE,gen$REGION,gen$ANALYSIS_YEAR,sep="_")
s<-filter(gen,GENUS_CODE=="SSSS")
df<-gen %>%
dplyr::filter(sry %in% taxlu$sry)
df<-rbind(df,s)
head(gen)
df<-left_join(df,seclu)
df<-left_join(df,taxlu)
head(df)
df<-df[,c("REGIONNAME","REGION","ISLAND","ISLANDCODE", "SECTORNAME","SECTOR","DB_RZ","ANALYSIS_YEAR","n","GENUS_CODE","TAXON_NAME","AdColDen","SE_AdColDen","JuvColDen","SE_JuvColDen","AcuteDZ", "SE_AcuteDZ","ChronicDZ", "SE_ChronicDZ","BLE","SE_BLE")]
df$REGIONNAME<-ifelse(df$SECTOR=="AGS","Mariana Archipelago",df$REGIONNAME)
df$ISLAND<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$ISLAND)
df$ISLANDCODE<-ifelse(df$SECTOR=="AGS","AGS",df$ISLANDCODE)
df$SECTORNAME<-ifelse(df$SECTOR=="AGS","Alamagan, Guguan, Sarigan",df$SECTORNAME)
write.csv(df,file="T:/Benthic/Data/Data Requests/NCRMPviztool_genus_demographics.csv",row.names = F)
#### In order to use this script you will need to contact ITS (ask for Tim Lee if he is available) to set up the ODBC drivers on your computer. You will not have adminstrative rights
# You will also need to set up an oracle account if you haven't already
##Once everything it set up you can download the individual datasets. If you experience errors telling you the datasets can't be found double check your oracle account to make sure you have access
#if you don't have access you will need to ask someone in Data Management to have you access to whatever views you are interested in.
rm(list=ls())
library(RODBC)            # to connect to oracle
setwd("C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Benthic REA")
Sys.setenv(ODBCINI = "/library/ODBC/odbc.ini")
##*******## jump down to Benthic REA WORKINGS if already saved as a .rfile
ch <- odbcConnect("CRED_Oracle", uid = "ccouch", pwd = "vnq+3!dHgz$Xjdc2")
##
## #list available tables
tv<-sqlTables(ch, tableType = "VIEW")
a<-as.vector(tv$TABLE_NAME[grep("V0_", as.character(tv$TABLE_NAME))])
b<-as.vector(tv$TABLE_NAME[grep("V_BIA_PERC_COVER_PHOTO_STR", as.character(tv$TABLE_NAME))])
c<-as.vector(tv$TABLE_NAME[grep("V_BIA", as.character(tv$TABLE_NAME))])
d<-as.vector(tv$TABLE_NAME[grep("MV_BIA", as.character(tv$TABLE_NAME))])
install.packages("DBI")
library(RODBC) # to connect to oracle
#### In order to use this script you will need to contact ITS (ask for Tim Lee if he is available) to set up the ODBC drivers on your computer. You will not have adminstrative rights
# You will also need to set up an oracle account if you haven't already
##Once everything it set up you can download the individual datasets. If you experience errors telling you the datasets can't be found double check your oracle account to make sure you have access
#if you don't have access you will need to ask someone in Data Management to have you access to whatever views you are interested in.
rm(list=ls())
library(RODBC) # to connect to oracle
library(DBI)
#### In order to use this script you will need to contact ITS (ask for Tim Lee if he is available) to set up the ODBC drivers on your computer. You will not have adminstrative rights
# You will also need to set up an oracle account if you haven't already
##Once everything it set up you can download the individual datasets. If you experience errors telling you the datasets can't be found double check your oracle account to make sure you have access
#if you don't have access you will need to ask someone in Data Management to have you access to whatever views you are interested in.
rm(list=ls())
library(RODBC) # to connect to oracle
library(DBI)
setwd("C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Benthic REA")
Sys.setenv(ODBCINI = "/library/ODBC/odbc.ini")
##*******## jump down to Benthic REA WORKINGS if already saved as a .rfile
ch <- odbcConnect("CRED_Oracle", uid = "ccouch", pwd = "vnq+3!dHgz$Xjdc2")
install.packages("ROracle")
ora <- dbDriver("Oracle")
con <- dbConnect(ora, username = "CCOUCH", password = "vnq+3!dHgz$Xjdc2", dbname = "GIS")
dbListTables(con)
res <- dbSendQuery(con, "select table_name from user_tables")
dbFetch(res)
print(res)
dbClearResult(res)
dbDisconnect(con)
rm(list=ls())
library(RODBC) # to connect to oracle
library(DBI)
library(ROracle)
setwd("C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Benthic REA")
ora <- dbDriver("Oracle")
#### In order to use this script you will need to contact ITS (ask for Tim Lee if he is available) to set up the ODBC drivers on your computer. You will not have adminstrative rights
# You will also need to set up an oracle account if you haven't already
##Once everything it set up you can download the individual datasets. If you experience errors telling you the datasets can't be found double check your oracle account to make sure you have access
#if you don't have access you will need to ask someone in Data Management to have you access to whatever views you are interested in.
rm(list=ls())
#library(RODBC) # to connect to oracle
library(DBI)
library(ROracle)
setwd("C:/Users/Courtney.S.Couch/Documents/Courtney's Files/R Files/ESD/Benthic REA")
ora <- dbDriver("Oracle")
library(ROracle)
library(Roracle)
install.packages("ROracle")
install.packages("ROracle")
#### In order to use this script you will need to contact ITS (ask for Tim Lee if he is available) to set up the ODBC drivers on your computer. You will not have adminstrative rights
# You will also need to set up an oracle account if you haven't already
##Once everything it set up you can download the individual datasets. If you experience errors telling you the datasets can't be found double check your oracle account to make sure you have access
#if you don't have access you will need to ask someone in Data Management to have you access to whatever views you are interested in.
rm(list=ls())
library(RODBC) # to connect to oracle
library(DBI)
library(ROracle)
.libPaths()
library(RODBC) # to connect to oracle
Sys.setenv(ODBCINI = "/library/ODBC/odbc.ini")
##*******## jump down to Benthic REA WORKINGS if already saved as a .rfile
ch <- odbcConnect("CRED_Oracle", uid = "ccouch", pwd = "vnq+3!dHgz$Xjdc2")
