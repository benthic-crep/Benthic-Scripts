STRATA_JKlu[st_all_CO$STRATAname],"_",
st_all_CO$TaxonomicCode,"_",
st_all_CO$SurveyYearStart,"_",
st_all_CO$SurveyYearEnd)
st_all_CO$AOILabel=paste0(SEC_JKlu[st_all_CO$SECTORname],"; ",
STRATA_JKlu[st_all_CO$STRATAname])
st_all_CO=st_all_CO[,c("JoinKey","AOILabel",names(st_all_CO)[!names(st_all_CO)%in%c("JoinKey","AOILabel")])]
st_all_TR$JoinKey=paste0("Strata","_",
SEC_JKlu[st_all_TR$SECTORname],"; ",
STRATA_JKlu[st_all_TR$STRATAname],"_",
st_all_TR$TaxonomicCode,"_",
st_all_TR$SurveyYearStart,"_",
st_all_TR$SurveyYearEnd)
st_all_TR$AOILabel=paste0(SEC_JKlu[st_all_TR$SECTORname],"; ",
STRATA_JKlu[st_all_TR$STRATAname])
st_all_TR=st_all_TR[,c("JoinKey","AOILabel",names(st_all_TR)[!names(st_all_TR)%in%c("JoinKey","AOILabel")])]
st_gen_CO$JoinKey=paste0("Strata","_",
SEC_JKlu[st_gen_CO$SECTORname],"; ",
STRATA_JKlu[st_gen_CO$STRATAname],"_",
st_gen_CO$TaxonomicCode,"_",
st_gen_CO$SurveyYearStart,"_",
st_gen_CO$SurveyYearEnd)
st_gen_CO$AOILabel=paste0(SEC_JKlu[st_gen_CO$SECTORname],"; ",
STRATA_JKlu[st_gen_CO$STRATAname])
st_gen_CO=st_gen_CO[,c("JoinKey","AOILabel",names(st_gen_CO)[!names(st_gen_CO)%in%c("JoinKey","AOILabel")])]
st_gen_TR$JoinKey=paste0("Strata","_",
SEC_JKlu[st_gen_TR$SECTORname],"; ",
STRATA_JKlu[st_gen_TR$STRATAname],"_",
st_gen_TR$TaxonomicCode,"_",
st_gen_TR$SurveyYearStart,"_",
st_gen_TR$SurveyYearEnd)
st_gen_TR$AOILabel=paste0(SEC_JKlu[st_gen_TR$SECTORname],"; ",
STRATA_JKlu[st_gen_TR$STRATAname])
st_gen_TR=st_gen_TR[,c("JoinKey","AOILabel",names(st_gen_TR)[!names(st_gen_TR)%in%c("JoinKey","AOILabel")])]
#Merge 'em
st_gen_CO$TaxonomicRes="Gen"
st_gen_TR$TaxonomicRes="Gen"
st_all_CO$TaxonomicRes="Com"
st_all_TR$TaxonomicRes="Com"
st_both_CO=rbind(st_gen_CO,st_all_CO)
st_both_TR=rbind(st_gen_TR,st_all_TR)
#Modify SciName
st_both_CO$ScientificName=SciName_JKlu[st_both_CO$ScientificName]
st_both_TR$ScientificName=SciName_JKlu[st_both_TR$ScientificName]
#Check Survey Years
st_both_CO$SurveyYearEnd=as.integer(st_both_CO$SurveyYearEnd)
st_both_CO$SurveyYearStart=as.integer(st_both_CO$SurveyYearStart)
st_both_CO$MonitoringCycle=as.integer(st_both_CO$AnalysisYear)
st_both_TR$SurveyYearEnd=as.integer(st_both_TR$SurveyYearEnd)
st_both_TR$SurveyYearStart=as.integer(st_both_TR$SurveyYearStart)
st_both_TR$MonitoringCycle=as.integer(st_both_TR$AnalysisYear)
#Get Join Ready - By Modifying the Column Names to Match the Template
st_both_rn_CO= st_both_CO %>% dplyr::rename(
N_demo=N_Demo,
N_cover=N_Cover,
CoralCover_SE=CoralCover_error,
MacroalgaeCover_SE=MacroalgaeCover_error,
CCA_Pct=CrustoseCoralineAlgaeCover_Pct,
CCA_SE=CrustoseCoralineAlgaeCover_error)
# Drop any rows with NA/O in all N columns
st_both_rn_CO=st_both_rn_CO %>% filter(!(N_demo==0&N_cover==0))
st_both_rn_TR= st_both_TR %>% dplyr::rename(
N_demoTREND=N_Demo,
N_coverTREND=N_Cover,
CoralCoverTREND_Pct=CoralCover_Pct,
CoralCoverTREND_SE=CoralCover_error,
MacroalgaeCoverTREND_Pct=MacroalgaeCover_Pct,
MacroalgaeCoverTREND_SE=MacroalgaeCover_error,
BleachingPrevalenceTREND_Pct=BleachingPrevalence_Pct,
BleachingPrevalenceTREND_SE=BleachingPrevalence_SE,
DiseasePrevalenceTREND_Pct=DiseasePrevalence_Pct,
DiseasePrevalenceTREND_SE=DiseasePrevalence_SE,
CCATREND_Pct=CrustoseCoralineAlgaeCover_Pct,
CCATREND_SE=CrustoseCoralineAlgaeCover_error,
AdultDensityTREND_colperm2=AdultDensity_colperm2,
AdultDensityTREND_SE=AdultDensity_SE,
JuvenileDensityTREND_colperm2=JuvenileDensity_colperm2,
JuvenileDensityTREND_SE=JuvenileDensity_SE
)
# Drop any rows with NA/O in all N columns
st_both_rn_TR=st_both_rn_TR %>% filter(!(N_demoTREND==0&N_coverTREND==0))
#Get Column Names in and Out For Join
#Output Columns
OutputCols=c(names(templ_str)[1:10],"N_demoTREND","N_coverTREND",names(templ_str)[11:38])
join_cols=c("JoinKey","AOILabel","SurveyYearStart","SurveyYearEnd","MonitoringCycle",
"ScientificName","TaxonomicCode","TaxonomicRes")
TREND_cols=(OutputCols)[grep(pattern = "TREND",x = (OutputCols))]
COMPLETE_cols=setdiff(OutputCols,c(join_cols,TREND_cols))
output_ST_Ljoin= left_join(x=st_both_rn_CO[,c(join_cols,COMPLETE_cols)],
y=st_both_rn_TR[,c(join_cols,TREND_cols)],
by=join_cols);dim(output_ST_Ljoin)
output_ST_Fjoin= full_join(x=st_both_rn_CO[,c(join_cols,COMPLETE_cols)],
y=st_both_rn_TR[,c(join_cols,TREND_cols)],
by=join_cols);dim(output_ST_Fjoin)
output_ST_Ljoin=output_ST_Ljoin[,OutputCols]
output_ST_Fjoin=output_ST_Fjoin[,OutputCols]
write.csv(x = output_ST_Ljoin,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_STRATA_LEFTJOIN_byGenus_19April2024.csv")
write.csv(x = output_ST_Fjoin,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_STRATA_FULLJOIN_byGenus_19April2024.csv")
#######
#Prep Sector Level Data For Join
#######
sec_all_CO$JoinKey=paste0("Sector","_",
SEC_JKlu[sec_all_CO$SECTORname],"_",
sec_all_CO$TaxonomicCode,"_",
sec_all_CO$SurveyYearStart,"_",
sec_all_CO$SurveyYearEnd)
sec_all_CO$AOILabel=paste0(SEC_JKlu[sec_all_CO$SECTORname])
sec_all_CO=sec_all_CO[,c("JoinKey","AOILabel",names(sec_all_CO)[!names(sec_all_CO)%in%c("JoinKey","AOILabel")])]
sec_all_TR$JoinKey=paste0("Sector","_",
SEC_JKlu[sec_all_TR$SECTORname],"_",
sec_all_TR$TaxonomicCode,"_",
sec_all_TR$SurveyYearStart,"_",
sec_all_TR$SurveyYearEnd)
sec_all_TR$AOILabel=paste0(SEC_JKlu[sec_all_TR$SECTORname])
sec_all_TR=sec_all_TR[,c("JoinKey","AOILabel",names(sec_all_TR)[!names(sec_all_TR)%in%c("JoinKey","AOILabel")])]
sec_gen_CO$JoinKey=paste0("Sector","_",
SEC_JKlu[sec_gen_CO$SECTORname],"_",
sec_gen_CO$TaxonomicCode,"_",
sec_gen_CO$SurveyYearStart,"_",
sec_gen_CO$SurveyYearEnd)
sec_gen_CO$AOILabel=paste0(SEC_JKlu[sec_gen_CO$SECTORname])
sec_gen_CO=sec_gen_CO[,c("JoinKey","AOILabel",names(sec_gen_CO)[!names(sec_gen_CO)%in%c("JoinKey","AOILabel")])]
sec_gen_TR$JoinKey=paste0("Sector","_",
SEC_JKlu[sec_gen_TR$SECTORname],"_",
sec_gen_TR$TaxonomicCode,"_",
sec_gen_TR$SurveyYearStart,"_",
sec_gen_TR$SurveyYearEnd)
sec_gen_TR$AOILabel=paste0(SEC_JKlu[sec_gen_TR$SECTORname])
sec_gen_TR=sec_gen_TR[,c("JoinKey","AOILabel",names(sec_gen_TR)[!names(sec_gen_TR)%in%c("JoinKey","AOILabel")])]
#Merge 'em
sec_gen_CO$TaxonomicRes="Gen"
sec_all_CO$TaxonomicRes="Com"
sec_both_CO=rbind(sec_gen_CO,sec_all_CO)
sec_gen_TR$TaxonomicRes="Gen"
sec_all_TR$TaxonomicRes="Com"
sec_both_TR=rbind(sec_gen_TR,sec_all_TR)
#Modify SciName
sec_both_CO$ScientificName=SciName_JKlu[sec_both_CO$ScientificName]
sec_both_TR$ScientificName=SciName_JKlu[sec_both_TR$ScientificName]
#Check Survey Years
sec_both_CO$SurveyYearEnd=as.integer(sec_both_CO$SurveyYearEnd)
sec_both_CO$SurveyYearStart=as.integer(sec_both_CO$SurveyYearStart)
sec_both_CO$MonitoringCycle=as.integer(sec_both_CO$AnalysisYear)
sec_both_TR$SurveyYearEnd=as.integer(sec_both_TR$SurveyYearEnd)
sec_both_TR$SurveyYearStart=as.integer(sec_both_TR$SurveyYearStart)
sec_both_TR$MonitoringCycle=as.integer(sec_both_TR$AnalysisYear)
#Get Join Ready - By Modifying the Column Names to Match the Template
sec_both_rn_CO= sec_both_CO %>% dplyr::rename(
N_demo=N_Demo,
N_cover=N_Cover,
CoralCover_SE=CoralCover_error,
MacroalgaeCover_SE=MacroalgaeCover_error,
CCA_Pct=CrustoseCoralineAlgaeCover_Pct,
CCA_SE=CrustoseCoralineAlgaeCover_error)
# Drop any rows with NA/O in all N columns
sec_both_rn_CO=sec_both_rn_CO %>% filter(!(N_demo==0&N_cover==0))
sec_both_rn_TR= sec_both_TR %>% dplyr::rename(
N_demoTREND=N_Demo,
N_coverTREND=N_Cover,
CoralCoverTREND_Pct=CoralCover_Pct,
CoralCoverTREND_SE=CoralCover_error,
MacroalgaeCoverTREND_Pct=MacroalgaeCover_Pct,
MacroalgaeCoverTREND_SE=MacroalgaeCover_error,
BleachingPrevalenceTREND_Pct=BleachingPrevalence_Pct,
BleachingPrevalenceTREND_SE=BleachingPrevalence_SE,
DiseasePrevalenceTREND_Pct=DiseasePrevalence_Pct,
DiseasePrevalenceTREND_SE=DiseasePrevalence_SE,
CCATREND_Pct=CrustoseCoralineAlgaeCover_Pct,
CCATREND_SE=CrustoseCoralineAlgaeCover_error,
AdultDensityTREND_colperm2=AdultDensity_colperm2,
AdultDensityTREND_SE=AdultDensity_SE,
JuvenileDensityTREND_colperm2=JuvenileDensity_colperm2,
JuvenileDensityTREND_SE=JuvenileDensity_SE
)
# Drop any rows with NA/O in all N columns
sec_both_rn_TR=sec_both_rn_TR %>% filter(!(N_demoTREND==0&N_coverTREND==0))
# # #Note there are many Repeated Join Keys In Both Data and the Template - i.e. Strata that should be pooled, not pooled
# #Before the join
COSSSS= sec_both_rn_CO %>% filter(TaxonomicResolution=="Com")
table(table(COSSSS$JoinKey))
ttCO=table(COSSSS$JoinKey)
whichrepCO=ttCO[ttCO>1]
TRSSSS= sec_both_rn_TR %>% filter(TaxonomicResolution=="Com")
table(table(TRSSSS$JoinKey))
ttTR=table(TRSSSS$JoinKey)
whichrepTR=ttTR[ttTR>1]
sec_both_rn_CO %>% filter(JoinKey%in%names(whichrepCO))
output_SEC_Ljoin= left_join(x=sec_both_rn_CO[,c(join_cols,COMPLETE_cols)],
y=sec_both_rn_TR[,c(join_cols,TREND_cols)],
by=join_cols);dim(output_SEC_Ljoin)
output_SEC_Fjoin= full_join(x=sec_both_rn_CO[,c(join_cols,COMPLETE_cols)],
y=sec_both_rn_TR[,c(join_cols,TREND_cols)],
by=join_cols);dim(output_SEC_Fjoin)
output_SEC_Ljoin=output_SEC_Ljoin[,OutputCols]
output_SEC_Fjoin=output_SEC_Fjoin[,OutputCols]
write.csv(x = output_SEC_Ljoin,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_SECTOR_LEFTJOIN_byGenus_19April2024.csv")
write.csv(x = output_SEC_Fjoin,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_SECTOR_FULLJOIN_byGenus_19April2024.csv")
#######
#Prep Island Level Data For Join
#######
isl_all_CO$JoinKey=paste0("Subjurisdiction","_",
ISLAND_JKlu[isl_all_CO$SUBJURISDICTIONname],"_",
isl_all_CO$TaxonomicCode,"_",
isl_all_CO$SurveyYearStart,"_",
isl_all_CO$SurveyYearEnd)
isl_all_CO$AOILabel=paste0(ISLAND_JKlu[isl_all_CO$SUBJURISDICTIONname])
isl_all_CO=isl_all_CO[,c("JoinKey","AOILabel",names(isl_all_CO)[!names(isl_all_CO)%in%c("JoinKey","AOILabel")])]
isl_gen_CO$JoinKey=paste0("Subjurisdiction","_",
ISLAND_JKlu[isl_gen_CO$SUBJURISDICTIONname],"_",
isl_gen_CO$TaxonomicCode,"_",
isl_gen_CO$SurveyYearStart,"_",
isl_gen_CO$SurveyYearEnd)
isl_gen_CO$AOILabel=paste0(ISLAND_JKlu[isl_gen_CO$SUBJURISDICTIONname])
isl_gen_CO=isl_gen_CO[,c("JoinKey","AOILabel",names(isl_gen_CO)[!names(isl_gen_CO)%in%c("JoinKey","AOILabel")])]
#Merge 'em
isl_gen_CO$TaxonomicRes="Gen"
isl_all_CO$TaxonomicRes="Com"
isl_both_CO=rbind(isl_gen_CO,isl_all_CO)
#Modify SciName
isl_both_CO$ScientificName=SciName_JKlu[isl_both_CO$ScientificName]
#Check Survey Years
isl_both_CO$SurveyYearEnd=as.integer(isl_both_CO$SurveyYearEnd)
isl_both_CO$SurveyYearStart=as.integer(isl_both_CO$SurveyYearStart)
isl_both_CO$MonitoringCycle=as.integer(isl_both_CO$AnalysisYear)
isl_all_TR$JoinKey=paste0("Subjurisdiction","_",
ISLAND_JKlu[isl_all_TR$SUBJURISDICTIONname],"_",
isl_all_TR$TaxonomicCode,"_",
isl_all_TR$SurveyYearStart,"_",
isl_all_TR$SurveyYearEnd)
isl_all_TR$AOILabel=paste0(ISLAND_JKlu[isl_all_TR$SUBJURISDICTIONname])
isl_all_TR=isl_all_TR[,c("JoinKey","AOILabel",names(isl_all_TR)[!names(isl_all_TR)%in%c("JoinKey","AOILabel")])]
isl_gen_TR$JoinKey=paste0("Subjurisdiction","_",
ISLAND_JKlu[isl_gen_TR$SUBJURISDICTIONname],"_",
isl_gen_TR$TaxonomicCode,"_",
isl_gen_TR$SurveyYearStart,"_",
isl_gen_TR$SurveyYearEnd)
isl_gen_TR$AOILabel=paste0(ISLAND_JKlu[isl_gen_TR$SUBJURISDICTIONname])
isl_gen_TR=isl_gen_TR[,c("JoinKey","AOILabel",names(isl_gen_TR)[!names(isl_gen_TR)%in%c("JoinKey","AOILabel")])]
#Merge 'em
isl_gen_TR$TaxonomicRes="Gen"
isl_all_TR$TaxonomicRes="Com"
isl_both_TR=rbind(isl_gen_TR,isl_all_TR)
#Modify SciName
isl_both_TR$ScientificName=SciName_JKlu[isl_both_TR$ScientificName]
#Check Survey Years
isl_both_TR$SurveyYearEnd=as.integer(isl_both_TR$SurveyYearEnd)
isl_both_TR$SurveyYearStart=as.integer(isl_both_TR$SurveyYearStart)
isl_both_TR$MonitoringCycle=as.integer(isl_both_TR$AnalysisYear)
#Get Join Ready - By Modifying the Column Names to Match the Template
isl_both_rn_CO= isl_both_CO %>% dplyr::rename(
N_demo=N_Demo,
N_cover=N_Cover,
CoralCover_SE=CoralCover_error,
MacroalgaeCover_SE=MacroalgaeCover_error,
CCA_Pct=CrustoseCoralineAlgaeCover_Pct,
CCA_SE=CrustoseCoralineAlgaeCover_error)
# Drop any rows with NA/O in all N columns
isl_both_rn_CO=isl_both_rn_CO %>% filter(!(N_demo==0&N_cover==0))
isl_both_rn_TR= isl_both_TR %>% dplyr::rename(
N_demoTREND=N_Demo,
N_coverTREND=N_Cover,
CoralCoverTREND_Pct=CoralCover_Pct,
CoralCoverTREND_SE=CoralCover_error,
MacroalgaeCoverTREND_Pct=MacroalgaeCover_Pct,
MacroalgaeCoverTREND_SE=MacroalgaeCover_error,
BleachingPrevalenceTREND_Pct=BleachingPrevalence_Pct,
BleachingPrevalenceTREND_SE=BleachingPrevalence_SE,
DiseasePrevalenceTREND_Pct=DiseasePrevalence_Pct,
DiseasePrevalenceTREND_SE=DiseasePrevalence_SE,
CCATREND_Pct=CrustoseCoralineAlgaeCover_Pct,
CCATREND_SE=CrustoseCoralineAlgaeCover_error,
AdultDensityTREND_colperm2=AdultDensity_colperm2,
AdultDensityTREND_SE=AdultDensity_SE,
JuvenileDensityTREND_colperm2=JuvenileDensity_colperm2,
JuvenileDensityTREND_SE=JuvenileDensity_SE
)
# Drop any rows with NA/O in all N columns
isl_both_rn_TR=isl_both_rn_TR %>% filter(!(N_demoTREND==0&N_coverTREND==0))
# # #Note there are many Repeated Join Keys In Both Data and the Template - i.e. Strata that should be pooled, not pooled
# #Before the join
COSSSS= isl_both_rn_CO %>% filter(TaxonomicResolution=="Com")
table(table(COSSSS$JoinKey))
ttCO=table(COSSSS$JoinKey)
whichrepCO=ttCO[ttCO>1]
TRSSSS= isl_both_rn_TR %>% filter(TaxonomicResolution=="Com")
table(table(TRSSSS$JoinKey))
ttTR=table(TRSSSS$JoinKey)
whichrepTR=ttTR[ttTR>1]
isl_both_rn_CO %>% filter(JoinKey%in%names(whichrepCO))
output_isl_Ljoin= left_join(x=isl_both_rn_CO[,c(join_cols,COMPLETE_cols)],
y=isl_both_rn_TR[,c(join_cols,TREND_cols)],
by=join_cols);dim(output_isl_Ljoin)
output_isl_Fjoin= full_join(x=isl_both_rn_CO[,c(join_cols,COMPLETE_cols)],
y=isl_both_rn_TR[,c(join_cols,TREND_cols)],
by=join_cols);dim(output_isl_Fjoin)
output_isl_Ljoin=output_isl_Ljoin[,OutputCols]
output_isl_Fjoin=output_isl_Fjoin[,OutputCols]
write.csv(x = output_isl_Ljoin,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_ISLAND_LEFTJOIN_byGenus_19April2024.csv")
write.csv(x = output_isl_Fjoin,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_ISLAND_FULLJOIN_byGenus_19April2024.csv")
#######
r_all_CO$JoinKey=paste0("Jurisdiction","_",
REGION_JKlu[r_all_CO$JURISDICTIONname],"_",
r_all_CO$TaxonomicCode,"_",
r_all_CO$SurveyYearStart,"_",
r_all_CO$SurveyYearEnd)
r_all_CO$AOILabel=paste0(REGION_JKlu[r_all_CO$JURISDICTIONname])
r_all_CO=r_all_CO[,c("JoinKey","AOILabel",names(r_all_CO)[!names(r_all_CO)%in%c("JoinKey","AOILabel")])]
r_gen_CO$JoinKey=paste0("Jurisdiction","_",
REGION_JKlu[r_gen_CO$JURISDICTIONname],"_",
r_gen_CO$TaxonomicCode,"_",
r_gen_CO$SurveyYearStart,"_",
r_gen_CO$SurveyYearEnd)
r_gen_CO$AOILabel=paste0(REGION_JKlu[r_gen_CO$JURISDICTIONname])
r_gen_CO=r_gen_CO[,c("JoinKey","AOILabel",names(r_gen_CO)[!names(r_gen_CO)%in%c("JoinKey","AOILabel")])]
#Merge 'em
r_gen_CO$TaxonomicRes="Gen"
r_all_CO$TaxonomicRes="Com"
r_both_CO=rbind(r_gen_CO,r_all_CO)
#Modify SciName
r_both_CO$ScientificName=SciName_JKlu[r_both_CO$ScientificName]
#Check Survey Years
r_both_CO$SurveyYearEnd=as.integer(r_both_CO$SurveyYearEnd)
r_both_CO$SurveyYearStart=as.integer(r_both_CO$SurveyYearStart)
r_both_CO$MonitoringCycle=as.integer(r_both_CO$AnalysisYear)
##
r_all_TR$JoinKey=paste0("Jurisdiction","_",
REGION_JKlu[r_all_TR$JURISDICTIONname],"_",
r_all_TR$TaxonomicCode,"_",
r_all_TR$SurveyYearStart,"_",
r_all_TR$SurveyYearEnd)
r_all_TR$AOILabel=paste0(REGION_JKlu[r_all_TR$JURISDICTIONname])
r_all_TR=r_all_TR[,c("JoinKey","AOILabel",names(r_all_TR)[!names(r_all_TR)%in%c("JoinKey","AOILabel")])]
r_gen_TR$JoinKey=paste0("Jurisdiction","_",
REGION_JKlu[r_gen_TR$JURISDICTIONname],"_",
r_gen_TR$TaxonomicCode,"_",
r_gen_TR$SurveyYearStart,"_",
r_gen_TR$SurveyYearEnd)
r_gen_TR$AOILabel=paste0(REGION_JKlu[r_gen_TR$JURISDICTIONname])
r_gen_TR=r_gen_TR[,c("JoinKey","AOILabel",names(r_gen_TR)[!names(r_gen_TR)%in%c("JoinKey","AOILabel")])]
#Merge 'em
r_gen_TR$TaxonomicRes="Gen"
r_all_TR$TaxonomicRes="Com"
r_both_TR=rbind(r_gen_TR,r_all_TR)
#Modify SciName
r_both_TR$ScientificName=SciName_JKlu[r_both_TR$ScientificName]
#Check Survey Years
r_both_TR$SurveyYearEnd=as.integer(r_both_TR$SurveyYearEnd)
r_both_TR$SurveyYearStart=as.integer(r_both_TR$SurveyYearStart)
r_both_TR$MonitoringCycle=as.integer(r_both_TR$AnalysisYear)
#Get Join Ready - By Modifying the Column Names to Match the Template
r_both_rn_CO= r_both_CO %>% dplyr::rename(
N_demo=N_Demo,
N_cover=N_Cover,
CoralCover_SE=CoralCover_error,
MacroalgaeCover_SE=MacroalgaeCover_error,
CCA_Pct=CrustoseCoralineAlgaeCover_Pct,
CCA_SE=CrustoseCoralineAlgaeCover_error)
# Drop any rows with NA/O in all N columns
r_both_rn_CO=r_both_rn_CO %>% filter(!(N_demo==0&N_cover==0))
r_both_rn_TR= r_both_TR %>% dplyr::rename(
N_demoTREND=N_Demo,
N_coverTREND=N_Cover,
CoralCoverTREND_Pct=CoralCover_Pct,
CoralCoverTREND_SE=CoralCover_error,
MacroalgaeCoverTREND_Pct=MacroalgaeCover_Pct,
MacroalgaeCoverTREND_SE=MacroalgaeCover_error,
BleachingPrevalenceTREND_Pct=BleachingPrevalence_Pct,
BleachingPrevalenceTREND_SE=BleachingPrevalence_SE,
DiseasePrevalenceTREND_Pct=DiseasePrevalence_Pct,
DiseasePrevalenceTREND_SE=DiseasePrevalence_SE,
CCATREND_Pct=CrustoseCoralineAlgaeCover_Pct,
CCATREND_SE=CrustoseCoralineAlgaeCover_error,
AdultDensityTREND_colperm2=AdultDensity_colperm2,
AdultDensityTREND_SE=AdultDensity_SE,
JuvenileDensityTREND_colperm2=JuvenileDensity_colperm2,
JuvenileDensityTREND_SE=JuvenileDensity_SE
)
# Drop any rows with NA/O in all N columns
r_both_rn_TR=r_both_rn_TR %>% filter(!(N_demoTREND==0&N_coverTREND==0))
# # #Note there are many Repeated Join Keys In Both Data and the Template - i.e. Strata that should be pooled, not pooled
# #Before the join
COSSSS= r_both_rn_CO %>% filter(TaxonomicResolution=="Com")
table(table(COSSSS$JoinKey))
ttCO=table(COSSSS$JoinKey)
whichrepCO=ttCO[ttCO>1]
TRSSSS= r_both_rn_TR %>% filter(TaxonomicResolution=="Com")
table(table(TRSSSS$JoinKey))
ttTR=table(TRSSSS$JoinKey)
whichrepTR=ttTR[ttTR>1]
r_both_rn_CO %>% filter(JoinKey%in%names(whichrepCO))
output_r_Ljoin= left_join(x=r_both_rn_CO[,c(join_cols,COMPLETE_cols)],
y=r_both_rn_TR[,c(join_cols,TREND_cols)],
by=join_cols);dim(output_r_Ljoin)
output_r_Fjoin= full_join(x=r_both_rn_CO[,c(join_cols,COMPLETE_cols)],
y=r_both_rn_TR[,c(join_cols,TREND_cols)],
by=join_cols);dim(output_r_Fjoin)
output_r_Ljoin=output_r_Ljoin[,OutputCols]
output_r_Fjoin=output_r_Fjoin[,OutputCols]
write.csv(x = output_r_Ljoin,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_REGION_LEFTJOIN_byGenus_19April2024.csv")
write.csv(x = output_r_Fjoin,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_REGION_FULLJOIN_byGenus_19April2024.csv")
#Pull taxon out of the join key  -- REGION
templ_reg$JoinKey_SSSS=templ_reg$JoinKey %>% str_remove("_[A-Z ]{3,}+")
output_r_Ljoin$JoinKey_SSSS=output_r_Ljoin$JoinKey %>% str_remove("_[A-Z ]{3,}+")
# Check for new or missing JoinKeys
missing_r=sort(setdiff(unique(templ_reg$JoinKey_SSSS),unique(output_r_Ljoin$JoinKey_SSSS)))
new_r=sort(setdiff(unique(output_r_Ljoin$JoinKey_SSSS),unique(templ_reg$JoinKey_SSSS)))
missing_r
new_r
#Purge new JoinKeys
I_purgenew_r=which(output_r_Ljoin$JoinKey_SSSS%in%new_r)
output_r_Ljoin_PN=output_r_Ljoin[-I_purgenew_r,]
write.csv(x = output_r_Ljoin_PN,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_REGION_LEFTJOIN_byGenus_PurgeNewJK_19April2024.csv")
#Pull taxon out of the join key  -- ISLAND
templ_isl$JoinKey_SSSS=templ_isl$JoinKey %>% str_remove("_[A-Z ]{3,}+")
output_isl_Ljoin$JoinKey_SSSS=output_isl_Ljoin$JoinKey %>% str_remove("_[A-Z ]{3,}+")
# Check for new or missing JoinKeys
missing_i=sort(setdiff(unique(templ_isl$JoinKey_SSSS),unique(output_isl_Ljoin$JoinKey_SSSS)))
new_i=sort(setdiff(unique(output_isl_Ljoin$JoinKey_SSSS),unique(templ_isl$JoinKey_SSSS)))
missing_i
new_i
#Purge new JoinKeys
I_purgenew_i=which(output_isl_Ljoin$JoinKey_SSSS%in%new_i)
output_isl_Ljoin_PN=output_isl_Ljoin[-I_purgenew_i,]
write.csv(x = output_isl_Ljoin_PN,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_ISLAND_LEFTJOIN_byGenus_PurgeNewJK_19April2024.csv")
#Pull taxon out of the join key  -- SECTOR
templ_sec$JoinKey_SSSS=templ_sec$JoinKey %>% str_remove("_[A-Z ]{3,}+")
output_SEC_Ljoin$JoinKey_SSSS=output_SEC_Ljoin$JoinKey %>% str_remove("_[A-Z ]{3,}+")
# Check for new or missing JoinKeys
missing_sc=sort(setdiff(unique(templ_sec$JoinKey_SSSS),unique(output_SEC_Ljoin$JoinKey_SSSS)))
new_sc=sort(setdiff(unique(output_SEC_Ljoin$JoinKey_SSSS),unique(templ_sec$JoinKey_SSSS)))
missing_sc
new_sc
secAOI2Region=c("CNMI","CNMI","CNMI","CNMI","PRIAs","CNMI",
"NWHI","GUA","GUA","GUA","CNMI","MHI",
"MHI","MHI","MHI","PRIAs","PRIAs","PRIAs",
"MHI","MHI","MHI","MHI","PRIAs","NWHI",
"MHI","MHI","MHI","NWHI","CNMI","MHI",
"MHI","MHI","MHI","MHI","MHI","MHI",
"MHI","MHI","MHI","MHI","MHI","MHI",
"MHI","MHI","MHI","SAMOA","CNMI","PRIAs",
"NWHI","SAMOA","CNMI","CNMI","CNMI","SAMOA",
"SAMOA","CNMI","SAMOA","SAMOA","SAMOA","SAMOA",
"SAMOA","SAMOA","PRIAs","MHI","MHI","MHI")
names(secAOI2Region)=c(sort(unique(templ_sec$AOILabel)),c("Maui; Hana","Maui; Molokini","Maui; Northwest"))
templ_sec$ANALYSIS_YEAR=paste(templ_sec$SurveyYearStart,"-",templ_sec$SurveyYearEnd)
templ_sec$ANALYSIS_YEAR=factor(templ_sec$ANALYSIS_YEAR,levels=sort(unique(templ_sec$ANALYSIS_YEAR)))
templ_sec$REGION=secAOI2Region[templ_sec$AOILabel]
ts_D=templ_sec %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% summarize(N=sum(N_demo)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
ts_C=templ_sec %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% summarize(N=sum(N_cover)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
ts_D=ts_D[,c(names(ts_D)[1:2],sort(names(ts_D)[3:length(names(ts_D))]))]
ts_C=ts_C[,c(names(ts_C)[1:2],sort(names(ts_C)[3:length(names(ts_C))]))]
output_SEC_Ljoin$ANALYSIS_YEAR=paste(output_SEC_Ljoin$SurveyYearStart,"-",output_SEC_Ljoin$SurveyYearEnd)
output_SEC_Ljoin$ANALYSIS_YEAR=factor(output_SEC_Ljoin$ANALYSIS_YEAR,levels=sort(unique(output_SEC_Ljoin$ANALYSIS_YEAR)))
output_SEC_Ljoin$REGION=secAOI2Region[output_SEC_Ljoin$AOILabel]
os_D=output_SEC_Ljoin %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% summarize(N=sum(N_demo)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
os_C=output_SEC_Ljoin %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% summarize(N=sum(N_cover)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
os_D=os_D[,c(names(os_D)[1:2],sort(names(os_D)[3:length(names(os_D))]))]
names(ts_D)
ts_D
ts_D=templ_sec %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% summarize(N=sum(N_demo)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
names(templ_sec)
templ_sec$SurveyYearStart
templ_sec[,c("SurveyYearStart","SurveyYearEnd")]
templ_sec$ANALYSIS_YEAR=paste(templ_sec$SurveyYearStart,"-",templ_sec$SurveyYearEnd)
templ_sec$ANALYSIS_YEAR
templ_sec$ANALYSIS_YEAR=factor(templ_sec$ANALYSIS_YEAR,levels=sort(unique(templ_sec$ANALYSIS_YEAR)))
templ_sec$REGION=secAOI2Region[templ_sec$AOILabel]
ts_D=templ_sec %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% summarize(N=sum(N_demo)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
templ_sec %>% filter(TaxonomicRes=="Com")
templ_sec %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% summarize(N=sum(N_demo))
templ_sec %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% dplyr::summarize(N=sum(N_demo))
ts_D=templ_sec %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% dplyr::summarize(N=sum(N_demo)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
ts_D
ts_C=templ_sec %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% dplyr::summarize(N=sum(N_cover)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
ts_D=ts_D[,c(names(ts_D)[1:2],sort(names(ts_D)[3:length(names(ts_D))]))]
ts_C=ts_C[,c(names(ts_C)[1:2],sort(names(ts_C)[3:length(names(ts_C))]))]
ts_D
output_SEC_Ljoin$ANALYSIS_YEAR=paste(output_SEC_Ljoin$SurveyYearStart,"-",output_SEC_Ljoin$SurveyYearEnd)
output_SEC_Ljoin$ANALYSIS_YEAR=factor(output_SEC_Ljoin$ANALYSIS_YEAR,levels=sort(unique(output_SEC_Ljoin$ANALYSIS_YEAR)))
output_SEC_Ljoin$REGION=secAOI2Region[output_SEC_Ljoin$AOILabel]
os_D=output_SEC_Ljoin %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% dplyr::summarize(N=sum(N_demo)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
os_C=output_SEC_Ljoin %>% filter(TaxonomicRes=="Com") %>% group_by(REGION,AOILabel,ANALYSIS_YEAR) %>% dplyr::summarize(N=sum(N_cover)) %>% pivot_wider(names_from = ANALYSIS_YEAR,values_from = N)
os_D=os_D[,c(names(os_D)[1:2],sort(names(os_D)[3:length(names(os_D))]))]
os_C=os_C[,c(names(os_C)[1:2],sort(names(os_C)[3:length(names(os_C))]))]
ts_C %>% print(n=99)
os_C %>% print(n=99)
ts_D %>% print(n=99)
os_D %>% print(n=99)
########################Starting HERE!!!!!!
#Purge new JoinKeys
I_purgenew_sc=which(output_SEC_Ljoin$JoinKey_SSSS%in%new_sc)
output_SEC_Ljoin_PN=output_SEC_Ljoin[-I_purgenew_sc,]
write.csv(x = output_SEC_Ljoin_PN,row.names = FALSE,
file="T:/Benthic/Data/Data Requests/NCRMPViztool/2023/For Submission/March 2024 Submission/PacificBenthicDataSummaryTable_SECTOR_LEFTJOIN_byGenus_PurgeNewJK_19April2024.csv")
#Pull taxon out of the join key  -- STRATA
templ_str$JoinKey_SSSS=templ_str$JoinKey %>% str_remove("_[A-Z ]{3,}+")
output_ST_Ljoin$JoinKey_SSSS=output_ST_Ljoin$JoinKey %>% str_remove("_[A-Z ]{3,}+")
# Check for new or missing JoinKeys
missing_st=sort(setdiff(unique(templ_str$JoinKey_SSSS),unique(output_ST_Ljoin$JoinKey_SSSS)))
new_st=sort(setdiff(unique(output_ST_Ljoin$JoinKey_SSSS),unique(templ_str$JoinKey_SSSS)))
missing_st
new_st
