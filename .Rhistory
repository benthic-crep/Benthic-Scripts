#   geom_text_repel(aes(y=AREA_HA_2024.B),size=3)+
#   scale_color_viridis_c()#+scale_x_log10()+scale_y_log10()
# ggsave(plot = DAplot,filename = "C:/Users/Thomas.Oliver/Downloads/DAplot.jpg",width=16,height=8)
# load demographic site data
# raw<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Analysis Ready Raw data/CoralBelt_Adults_raw_CLEANED_2023.csv")
# rawraw<-load("T:/Benthic/Data/REA Coral Demography & Cover/Raw from Oracle/ALL_REA_ADULTCORAL_RAW_2013-2023.rdata")
# wsd_T<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Site/BenthicREA_sitedata_TAXONCODE_2023.csv")
wsd_G<-read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Site/BenthicREA_sitedata_GENUS_2023.csv")
wsd_SSSS=wsd_G %>% filter(GENUS_CODE=="SSSS")
#wsd_F=load("C:/Users/Thomas.Oliver/WORK/Projects/GitHub Projects/fish-paste/data/All")
cov=read.csv("T:/Benthic/Data/REA Coral Demography & Cover/Summary Data/Stratum/BenthicCover_2010-2023_Tier1_STRATA_updated.csv")
f=load("C:/Users/Thomas.Oliver/WORK/Projects/GitHub Projects/fish-paste/data/ALL_REA_FISH_RAW.rdata")
#Specify Target Genera (see "Select Target Taxa" below)
tgen=c("POSP","PAVS","POCS","MOSP","SSSS")
# filter past data for region and nSPC surveys and the last few years/rounds
# AllRegSD<-wsd_G %>% filter(OBS_YEAR>"2010") %>%
#   filter(GENUS_CODE%in%tgen) %>% # group by strata
#   filter(!SEC_NAME%in%c("Lahaina")) %>% #Resolve Problem Sectors (i.e. Lahaina) ## Do this by ANYear/REGION selected 19 - 16
#   group_by(REGION,ISLAND,SEC_NAME,REEF_ZONE,DEPTH_BIN,GENUS_CODE) %>% #Use most recent adequate survey year...
#   summarize(SD = sd(AdColDen)) %>%
#   drop_na() # drop strata with no data
# Focal Regions (i.e. in 24, NWHI and MHI) -------------------------------------------------------------------------
#Use most recent adequate survey year...
REG1=wsd_G %>% filter(REGION=="MHI",ANALYSIS_YEAR%in%c("2013","2016","2019"))
REG2=wsd_G %>% filter(REGION=="NWHI",ANALYSIS_YEAR%in%c("2013-15","2016","2017"))
AYNlu=c(2013,2014,2016,2017,2019);names(AYNlu)=sort(unique(c(REG1$ANALYSIS_YEAR,REG2$ANALYSIS_YEAR)))
REG_SD=rbind(REG1,REG2) %>%
mutate(ANALYSIS_YR_NUM=as.numeric(AYNlu[ANALYSIS_YEAR])) %>%
group_by(REGION,ISLAND,SEC_NAME,REEF_ZONE,DEPTH_BIN,GENUS_CODE,ANALYSIS_YR_NUM) %>%
filter(GENUS_CODE%in%tgen) %>% #focal taxa only
dplyr::summarize(SD = sd(AdColDen)) %>%
group_by(REGION,ISLAND,SEC_NAME,REEF_ZONE,DEPTH_BIN,GENUS_CODE) %>% #take most recent non-NA year
na.omit() %>%
filter(ANALYSIS_YR_NUM == max(ANALYSIS_YR_NUM))
#Add back strata with 0-1 samples per year (SD=NA)
REG=rbind(REG1,REG2) %>%
mutate(ANALYSIS_YR_NUM=as.numeric(AYNlu[ANALYSIS_YEAR])) %>%
dplyr::select(setdiff(names(REG_SD),c("SD","ANALYSIS_YEAR_NUM")))%>%
filter(GENUS_CODE%in%tgen) %>%
group_by(REGION,ISLAND,SEC_NAME,REEF_ZONE,DEPTH_BIN,GENUS_CODE) %>% #take most recent non-NA year
filter(ANALYSIS_YR_NUM == max(ANALYSIS_YR_NUM)) %>%
distinct() %>% left_join(REG_SD)
#Add variability estimates that are NA back at ISLAND-DEPTH_BIN mean SD
ISL.GEN_mnSD<-REG %>% group_by(ISLAND,GENUS_CODE) %>%
summarise(MN_SD=mean(SD,na.rm=T))
SD_FILLi=which(is.na(REG$SD))
REG[SD_FILLi,"SD"]=left_join(REG[,setdiff(names(REG),c("SD","ANALYSIS_YEAR"))],ISL.GEN_mnSD)[SD_FILLi,"MN_SD"]
REG$ANALYSIS_YEAR=as.character(REG$ANALYSIS_YR_NUM)
REG[SD_FILLi,"ANALYSIS_YEAR"]="ISL-DB MN"
# # !!!!!! filter for reef zones/islands NOT being surveyed here !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Going to run across all habitats
#REG<-REG %>% filter(REEF_ZONE != "Lagoon",REEF_ZONE != "Backreef")
#REG<-droplevels(REG)
#DROP ISLANDS NOT IN ALLOCATION
REG=REG %>% filter(!ISLAND%in%c("Maro","Laysan","Midway"))# %>% filter(ISLAND=="Oahu")
# get total SD per island in order to get proportion of each genera's group's variance
ISL.GEN_SD<-REG %>% group_by(ISLAND,GENUS_CODE) %>%
summarise(SUM_SD=sum(SD,na.rm=T))
# join totals back to original dataframe to calculate proportion
STR.GEN_pSD<-left_join(REG,ISL.GEN_SD,by=c("ISLAND","GENUS_CODE")) %>%
mutate(pSD = (SD/SUM_SD))
# calculate average SD for each strata - first isloate proportion of SD, get rid of sd columns
STR_pSD<-STR.GEN_pSD %>% #mean prop var across four rep. genera (POSP,MOSP,PAVS,POCS) and all taxa (SSSS)
group_by(REGION,ISLAND,SEC_NAME,REEF_ZONE,DEPTH_BIN) %>%
summarise(pSD=mean(pSD,na.rm=T))  # get the mean at the strata level
# get area values for each sector from the 'sectors' dataframe
STR_pSD_A<-strataarea %>% dplyr::select(REGION,ISLAND, SEC_NAME, REEF_ZONE, DEPTH_BIN, AREA_HA_2024)%>%
right_join(STR_pSD, by=c("REGION","ISLAND", "SEC_NAME", "REEF_ZONE", "DEPTH_BIN")) # right joining to the previous dataframe selects values for just this region
ISL_AREA<-strataarea %>% group_by(REGION,ISLAND) %>%
dplyr::summarize(ISLAND_AREA=sum(AREA_HA_2024,na.rm=T)) # summarize area by island
STR_pSD_pA_prodSDA<-STR_pSD_A %>%
left_join(ISL_AREA,by=c("REGION","ISLAND")) %>%
mutate(pAREA=AREA_HA_2024/ISLAND_AREA) %>%
dplyr::select(REGION,ISLAND, SEC_NAME, REEF_ZONE, DEPTH_BIN,pSD,pAREA) %>%
group_by(REGION,ISLAND, SEC_NAME, REEF_ZONE, DEPTH_BIN) %>%
mutate(prodSDA=prod(c(pSD,pAREA)))# calculate proportional area for each strata
ISL_prodSDA<-STR_pSD_pA_prodSDA %>%
group_by(ISLAND) %>%
dplyr::summarize(prodSDA_ISL=sum(prodSDA))
STR_pSDA<-STR_pSD_pA_prodSDA %>%
left_join(ISL_prodSDA,by="ISLAND") %>%
mutate(pSDA=prodSDA/prodSDA_ISL) %>% # calculate the proportional weight for each strata
dplyr::select(REGION,ISLAND, SEC_NAME, REEF_ZONE, DEPTH_BIN,pSD,pAREA,pSDA) # clean up dataframe
# JUST A CHECK: does total variance for each island add up to 1?
test<-STR_pSDA %>%
group_by(ISLAND) %>%
dplyr::summarize(sum=sum(pSDA))
test
# to calculate allocation based on weights:
##LOAD DAYS PER ISLAND ALLOCATION
# get list of islands - helpful to build DpI .csv
# data.frame(RI=unique(STR_pSDA[,c("REGION","ISLAND")]))
DpI=read.csv("NCRMP24_DAYSperISLAND_20240618.csv")
#This gives small boat days per island, now need to assume 3, 4 or 5 sfm sites per day
STR_ALLOC=STR_pSDA %>%
left_join(DpI,by=c("REGION","ISLAND")) %>%
mutate(SpSBD.2=2,SpSBD.2.5=2.5,SpSBD.3=3,SpSBD.3.5=3.5,SpSBD.4=4,SpSBD.5=5) %>%
pivot_longer(cols=c("SpSBD.2","SpSBD.2.5","SpSBD.3","SpSBD.3.5","SpSBD.4","SpSBD.5"),values_to = "SITESpSBD",names_to=NULL) %>%
mutate(SDxA_ALLOC=round(SMALL_BOAT_DAYS*SITESpSBD*pSDA),
AREA_ALLOC=round(SMALL_BOAT_DAYS*SITESpSBD*pAREA)) %>%
pivot_wider(names_from = "SITESpSBD",values_from = c("SDxA_ALLOC","AREA_ALLOC"))
#Historic
REG1=wsd_SSSS %>% filter(REGION=="MHI")
REG2=wsd_SSSS %>% filter(REGION=="NWHI")
#AYNlu=c(2013,2014,2016,2017,2019);names(AYNlu)=sort(unique(c(REG1$ANALYSIS_YEAR,REG2$ANALYSIS_YEAR)))
REG_History=rbind(REG1,REG2) %>%
#  mutate(ANALYSIS_YR_NUM=as.numeric(AYNlu[ANALYSIS_YEAR])) %>%
group_by(REGION,ISLAND,SEC_NAME,REEF_ZONE,DEPTH_BIN,ANALYSIS_YEAR) %>%
summarize(Nsites=length(unique(SITEVISITID))) %>%
arrange(ANALYSIS_YEAR) %>%# filter(ANALYSIS_YR_NUM%in%c(2013,2016,2019)) %>%
pivot_wider(names_from = ANALYSIS_YEAR,values_from = Nsites,names_prefix = "N_") %>%
replace_na(list(N_2013=0,N_2019=0,N_2016=0,`N_2013-15`=0,N_2014=0,N_2017=0))
REG_History$N_2013_15=REG_History$'N_2013-15'+REG_History$N_2014+REG_History$N_2013
REG_History$N_2016_17=REG_History$N_2016+REG_History$N_2017
REG_History=REG_History %>%
select(REGION,ISLAND,SEC_NAME,REEF_ZONE,DEPTH_BIN,N_2013_15,N_2016_17,N_2019) %>%
arrange(REGION,ISLAND,SEC_NAME,REEF_ZONE,DEPTH_BIN)
#Add History
STR_ALLOC=STR_ALLOC %>% left_join(REG_History)
#Tweak Sector allocation, then Island to ensure strata N>2
STR_ALLOC_MAN=STR_ALLOC
STR_ALLOC_MAN=STR_ALLOC_MAN %>% filter(!ISLAND%in%c("Oahu"))
STR_ALLOC_MAN$STR_NAME=paste0(STR_ALLOC_MAN$SEC_NAME,"_",STR_ALLOC_MAN$REEF_ZONE,"_",STR_ALLOC_MAN$DEPTH_BIN)
col2tweak=grep("SDxA",names(STR_ALLOC))
for(ci in col2tweak){
Man_col=paste0(names(STR_ALLOC_MAN)[ci],"_MAN")
STR_ALLOC_MAN[,Man_col]=STR_ALLOC_MAN[,ci]
uLT2=which(STR_ALLOC_MAN[,Man_col]<2)
for (stri in uLT2){
#sec_tot=STR_ALLOC_MAN %>% filter(SEC_NAME==STR_ALLOC_MAN$SEC_NAME[stri])
isl_tot=STR_ALLOC_MAN %>% filter(ISLAND==STR_ALLOC_MAN$ISLAND[stri])
#check what we need to add to make stri 2
ltdiff=2-STR_ALLOC_MAN[stri,Man_col]
#take away from highest island allocation if any above 2
islmaxstr=isl_tot$STR_NAME[which(isl_tot[,Man_col]==max(isl_tot[,Man_col],na.rm=T))[1]]
islmaxi=which(STR_ALLOC_MAN$STR_NAME==islmaxstr)
#check if new total will be at least 2
if((STR_ALLOC_MAN[islmaxi,Man_col]-ltdiff)>=2){
#deduct
STR_ALLOC_MAN[islmaxi,Man_col]=STR_ALLOC_MAN[islmaxi,Man_col]-ltdiff
#add
STR_ALLOC_MAN[stri,Man_col]=STR_ALLOC_MAN[stri,Man_col]+ltdiff
}else{
#if can't do it, can't do it - leave as is
print(paste0(Man_col,": Ran out of island allocation"))
}
}
}
# save file
write.csv(STR_ALLOC_MAN,file=paste0("./NCRMP24_BOATDAYS_Allocation_",Sys.Date(),"_Manual.csv"),row.names = FALSE)
#Pulling from Smith, Steven G., Dione W. Swanson, Mark Chiappone, Steven L. Miller, and Jerald S. Ault. "Probability sampling of stony coral populations in the Florida Keys." Environmental Monitoring and Assessment 183 (2011): 121-138.
#Given that we now use a single-stage design, SSU = 10 m2, PSU = 2500 m2; Mhi = 250
#Nstarh = optimal allocation for a given stratum is...
#Nstarh = Nstar * ( Wh * Suh  )/( SUMh (Wh * Suh) )
#Where ...
#Nstar is the "number of PSUs required to achieve a specified variance !!! (not just how many sites you actually have)
#Wh is the Stratum h weighting factor (aka proportional area)
#... i.e. (Nh*Mh / SUMh( Nh*Mh )); Nh*Mh = Total possible SSUs in Strat h (Area)
#Suh is the sample standard deviation in stratum h (SQRT(VARh))
#So, in english, the optimal allocation per stratum across a given domain is
#    the Number of total sites needed to hit a desired variance (Nstar) times
#    the ratio of prop area * stratum sd AND the summed prop area by stratum sd for all strata.
#Currently, we just estimate Nstar - I want to actually calculate it, starting at island scale.
#Working Backward:
#1: Nstar_h = Nstar * ( w_h * s_uh  )/( SUM_h(w_h * s_uh) )
#2: Nstar = ( SUM_h(w_h * s_uh) * ( SUM_h(w_h * s_uh) + SUM_h( ( w_h^2 * s_2h2 ) / (mstar_h * w_h * s_uh) ) ) ) /...
#                                       ( V[D--_st] + SUM_h( ( w_h^2 * s_1h2 ) / (N_h) ))
#Nstar_h ~ Nstar, w_h, s_uh
#Nstar ~ w_h, s_uh, s_2h2, mstar_h, V[D--_st], s_1h2, N_h
# LIBRARIES  -----------------------------------------------------------------------------------------
rm(list=ls())      # clean working environment
# Load libraries
library(tidyverse) # for summarizing/orgainzing data
# FUNCTIONS ---------------------------------------------------------------
c_Nstar_h=function(Nstar,w_h,s_uh){ #Optimal Strata Level Allocation
Nstar_h=Nstar*(w_h*s_uh)/(sum(w_h*s_uh))
return(Nstar_h)
}
c_Nstar=function(w_h, s_uh, s_1h2, s_2h2, mstar_h, V.D.._st, N_h,STAGE=1){ #N PSU to hit variance target
if(STAGE==1){
num = sum(w_h*s_uh)^2
}else{
num = sum(w_h*s_uh)*(sum(w_h*s_uh) + sum((w_h^2*s_2h2)/(mstar_h*w_h*s_uh)))
}
denom = (V.D.._st + sum( ( w_h^2 * s_1h2 ) / (N_h) ))
Nstar=num/denom
return(Nstar)
}
c_w_h = function(N_h,M_h){ #Strat Weighting factor (aka proportional area across domain)
w_h = (N_h*M_h)/sum(N_h*M_h)
return(w_h)
}
c_s_uh = function(s_1h2,s_2h2,M_h,STAGE=1){ #Sample standard deviation in stratum h
if(STAGE==1){
s_uh = sqrt( s_1h2 )
}else{
s_uh = sqrt( s_1h2 - (s_2h2/M_h))}
return(s_uh)
}
c_s_1h2 = function(n_h,P._hi){ #Sample variance among PSUs in stratum h
s_1h2 = sum((P._hi-P.._h)^2) / (n_h - 1)
return(s_1h2)
}
c_s_2h2 = function(n_h,m_hi,P._hi){ #Sample variance among SSUs in stratum h
s_2h2 = (1/n_h) * ( (sum(m_hi/(m_hi-1))) * (P._hi) * (1 - P._hi) )
return(s_2h2)
}
c_mstar_h = function (s_2h2,s_uh) {# Optimum number of SSU per PSU in stratum h (i think I'll just set this to 1?)
mstar_h = sqrt(s_2h2)/s_uh
return(mstar_h)
}
c_D.._st=function(w_h,D.._h){#Target Variance for survey wide mean density #Can I set this?
D.._st = sum(w_h*D.._h)
return(D.._st)
}
c_V.D.._st=function(D.._h,D.._st){#Target Variance for survey wide mean density #Can I set this?
V.D.._st = (CV(D.._h)*D.._st)^2
return(V.D.._st)
}
c_N_h=function(A_h.m2,PSU_Am2){
N_h=floor(A_h.m2/PSU_Am2)
reuturn(N_h)
}
SE=function(x){return(sd(x)/sqrt(length(x)))}
CV=function(x){return(SE(x)/mean(x))}
#OK Now if I want to calcualte Nstar_h: I'm going to calculate each component and add a ".c" suffix
# DATA: Get Allocation Ready Data ---------------------------------------------------------------
#First get PSU-level data for the MHI and strata Areas.
####Run lines 33 - 107 of Benthic Allocation Generation, returns StrataLevelData mhi_a; Imma call it DF_h
# Get StrataLevelData with # Has N_h, n_h, D.._h, s_1h2, s_2h2=NA, and s_uh ~ sqrt(s_1h2)
setwd("T:/Benthic/Data/StRS Allocation/")
str=read.csv("../REA Coral Demography & Cover/Summary Data/Stratum/BenthicREA_stratadata_GENUS.csv")
site=read.csv("../REA Coral Demography & Cover/Summary Data/Site/BenthicREA_sitedata_GENUS_2023.csv")
######################################
HA2M2=10000
A_PSU.M2=50^2
A_SSU.M2=10
M_h=A_PSU.M2/A_SSU.M2
#Strata Level Metrics
#N_h: Total possible number of PSUs units in stratum h
#n_h: Number of PSUs sampled in stratum h
#D.._h: Mean density in stratum h
#s_1h2: Sample variance among PSUs in stratum h
#s_2h2=NA
#s_uh ~ sqrt(s_1h2) #Sample standard deviation in stratum h
# load sector data
sectors<-read.csv("BenthicSectorsforAllocation.csv")
sec_N_h=sectors %>%
select(REGION,ISLAND, SEC_NAME, REEF_ZONE, DEPTH_BIN, AREA_HA) %>%
mutate(AREA_M2=AREA_HA*HA2M2,
N_h=AREA_M2/A_PSU.M2) %>%
rename(SECTOR=SEC_NAME) %>%
select(REGION,ISLAND,SECTOR,REEF_ZONE,DEPTH_BIN,N_h)
DBlu=c("Shallow","Mid","Deep");names(DBlu)=c("S","M","D")
str$DEPTH_BIN=DBlu[substr(str$DB_RZ,2,2)]
tgen=c("POSP","PAVS","POCS","MOSP","SSSS")
DF_h=str %>%
filter(REGION%in%c("MHI","NWHI"))  # Has N_h, n_h, D.._h, s_1h2, s_2h2=NA, and s_uh ~ sqrt(s_1h2)
DF_hl= DF_h %>%
select(METHOD,REGION,ISLAND,ANALYSIS_YEAR,SECTOR,Stratum,REEF_ZONE,DEPTH_BIN,DB_RZ,GENUS_CODE,n,Ntot,AdColDen,SE_AdColDen) %>%
rename(D.._h=AdColDen,s_uh=SE_AdColDen,n_h=n) %>%
mutate(s_1h2=s_uh^2,DEPTH_BIN=DBlu[substr(DB_RZ,2,2)]) %>%
left_join(sec_N_h,by=c("REGION","ISLAND","SECTOR","REEF_ZONE","DEPTH_BIN")) %>%
group_by(ISLAND,GENUS_CODE,ANALYSIS_YEAR) %>%
mutate(m._h=1,
n_h.m_h=n_h*m._h,
var.D.._h.= ((1-(n_h/N_h))/(n_h))*s_1h2,
w_h=c_w_h(N_h = N_h,M_h=M_h))
TargetCV=0.25
#Domain scale estimates (ISLAND)
DF_stl=DF_hl %>%
group_by(REGION,ISLAND,GENUS_CODE,ANALYSIS_YEAR) %>%
reframe(
n=sum(n_h),
nm=sum(n_h.m_h),
D.._st=sum(w_h*D.._h),
var.D.._st.= sum(w_h^2*var.D.._h.),
SE.D.._st.=sqrt(var.D.._st.),
CV.D.._st.=SE.D.._st./D.._st,
V.D.._st.=(CV.D.._st.*D.._st)^2,
Nstar_obs=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = V.D.._st.,
N_h = N_h),
Nstar_05=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.05*D.._st)^2,
N_h = N_h),
Nstar_10=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.10*D.._st)^2,
N_h = N_h),
Nstar_20=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.20*D.._st)^2,
N_h = N_h),
Nstar_30=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.30*D.._st)^2,
N_h = N_h),
Nstar_50=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.50*D.._st)^2,
N_h = N_h),
Nstar_99=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.99*D.._st)^2,
N_h = N_h)
) %>% pivot_longer(cols=all_of(c("Nstar_05","Nstar_10","Nstar_20","Nstar_30","Nstar_50","Nstar_99")),
names_to = "Target_CV",values_to = "Nstar",names_prefix = "Nstar_")
DF_stl$Target_CV=as.numeric(DF_stl$Target_CV)
#Generate Mean CV Across Target Taxa
DF_stl.=DF_stl %>%
filter(GENUS_CODE%in%tgen) %>%
filter(!ISLAND%in%c("Midway","Laysan","Maro")) %>%
group_by(REGION,ISLAND,Target_CV) %>%
filter(ANALYSIS_YEAR==max(ANALYSIS_YEAR)) %>%
group_by(REGION,ISLAND,ANALYSIS_YEAR,Target_CV) %>%
#mean across the 5 target taxa (akin to old school allocation)
summarize(n=mean(n,na.rm=T),
nm=mean(nm,na.rm=T),
D.._st=mean(D.._st,na.rm=T),
var.D.._st.=mean(var.D.._st.,na.rm=T),
SE.D.._st.=mean(SE.D.._st.,na.rm=T),
CV.D.._st.=mean(CV.D.._st.,na.rm=T),
V.D.._st.=mean(V.D.._st.,na.rm=T),
Nstar_obs=mean(Nstar_obs,na.rm=T),
Nstar=mean(Nstar,na.rm=T)
)
Old_Style_Neyman_Allocation=read.csv("./NCRMP24_BOATDAYS_Allocation_2024-06-18_Manual.csv")
Old_Style_Neyman_Allocation=Old_Style_Neyman_Allocation%>% mutate(Stratum=paste(SEC_NAME,REEF_ZONE,DEPTH_BIN,sep="_"))
ISL_OSNA=Old_Style_Neyman_Allocation %>%
filter(REGION%in%c("MHI","NWHI")) %>%
filter(!ISLAND%in%c("Midway","Laysan","Maro")) %>%
group_by(REGION,ISLAND) %>%
reframe(N=sum(SDxA_ALLOC_2.5_MAN))
RefCV=25
RefCV2=10
NstarPlots=DF_stl. %>%
ggplot(aes(x=Nstar,y=Target_CV,color=ANALYSIS_YEAR))+
geom_segment(aes(x=Nstar_obs,xend=n,y=CV.D.._st.*100,yend=CV.D.._st.*100))+
geom_point(aes(x=Nstar_obs,y=CV.D.._st.*100),shape=8)+
geom_point(aes(x=n,y=CV.D.._st.*100),shape=19)+
geom_line(aes())+
scale_shape_manual(values=c("Nstar @ observed CV"=8,"N Sampled"=19))+
facet_wrap(c("REGION","ISLAND"),nrow=5)+
geom_hline(yintercept = RefCV,color="purple",lty=2)+
geom_hline(yintercept = RefCV2,color="gold",lty=2)+
geom_vline(aes(xintercept = N),color="gray",data=ISL_OSNA)+
geom_text(aes(x = N+5,y=RefCV+5,label=N),color="gray",data=ISL_OSNA)+
scale_x_log10(limits=c(1,200))+theme_bw()+
scale_y_sqrt()+theme_bw()+
ylab("Co. of Variation: Adult Colony Density")+
xlab("Nstar - Optimal Number of Sites for given CV target")+
ggtitle(paste0("Nstar Analysis - Island Scale, Mean of Total and 4 Target Genera"))
sc=1.25
ggsave(plot = NstarPlots,filename = "./NstarPlots_SSSS_withNeyman_NCRMP24_20240221.jpg",width=sc*11,height=sc*8.5)
#
#Strata scale estimates (STRATA)
DF_strata=DF_hl %>%
group_by(REGION,ISLAND,SECTOR,Stratum,GENUS_CODE,ANALYSIS_YEAR) %>%
reframe(
n=sum(n_h),
nm=sum(n_h.m_h),
D.._st=sum(w_h*D.._h),
var.D.._st.= sum(w_h^2*var.D.._h.),
SE.D.._st.=sqrt(var.D.._st.),
CV.D.._st.=SE.D.._st./D.._st,
V.D.._st.=(CV.D.._st.*D.._st)^2,
Nstar_obs=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = V.D.._st.,
N_h = N_h),
Nstar_05=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.05*D.._st)^2,
N_h = N_h),
Nstar_10=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.10*D.._st)^2,
N_h = N_h),
Nstar_20=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.20*D.._st)^2,
N_h = N_h),
Nstar_25=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.25*D.._st)^2,
N_h = N_h),
Nstar_30=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.30*D.._st)^2,
N_h = N_h),
Nstar_50=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.50*D.._st)^2,
N_h = N_h),
Nstar_99=c_Nstar(w_h=w_h,
s_uh = s_uh,
s_1h2 = s_1h2,
s_2h2 = 0,
mstar_h = 1,
V.D.._st = (.99*D.._st)^2,
N_h = N_h)
) %>% pivot_longer(cols=all_of(c("Nstar_05","Nstar_10","Nstar_20","Nstar_25","Nstar_30","Nstar_50","Nstar_99")),
names_to = "Target_CV",values_to = "Nstar",names_prefix = "Nstar_")
DF_strata$Target_CV=as.numeric(DF_strata$Target_CV)
class(DF_strata$Target_CV)
#Generate Mean CV Across Target Taxa
DF_strata.=DF_strata %>%
filter(GENUS_CODE%in%tgen) %>%
filter(!ISLAND%in%c("Midway","Laysan","Maro")) %>%
group_by(REGION,ISLAND,SECTOR,Stratum,Target_CV) %>%
filter(ANALYSIS_YEAR==max(ANALYSIS_YEAR)) %>%
group_by(REGION,ISLAND,SECTOR,Stratum,ANALYSIS_YEAR,Target_CV) %>%
#mean across the 5 target taxa (akin to old school allocation)
summarize(n=mean(n,na.rm=T),
nm=mean(nm,na.rm=T),
D.._st=mean(D.._st,na.rm=T),
var.D.._st.=mean(var.D.._st.,na.rm=T),
SE.D.._st.=mean(SE.D.._st.,na.rm=T),
CV.D.._st.=mean(CV.D.._st.,na.rm=T),
V.D.._st.=mean(V.D.._st.,na.rm=T),
Nstar_obs=mean(Nstar_obs,na.rm=T),
Nstar=mean(Nstar,na.rm=T)
)
RefCV=25
RefCV2=10
uI=DF_strata. %>% ungroup() %>%
filter(!ISLAND%in%c("Midway","Laysan","Maro")) %>%
distinct(REGION,ISLAND) %>% select(REGION,ISLAND)
for (i in 1:nrow(uI)){
STR_OSNA=Old_Style_Neyman_Allocation %>% filter(ISLAND==uI$ISLAND[i])
NstarPlots_STR=DF_strata. %>%
filter(ISLAND==uI$ISLAND[i]) %>%
group_by() %>%
droplevels() %>%
ggplot(aes(x=Nstar,y=Target_CV,color=ANALYSIS_YEAR))+
geom_segment(aes(x=Nstar_obs,xend=n,y=CV.D.._st.*100,yend=CV.D.._st.*100))+
geom_point(aes(x=Nstar_obs,y=CV.D.._st.*100),shape=8)+
geom_point(aes(x=n,y=CV.D.._st.*100),shape=19)+
geom_line()+
scale_shape_manual(values=c("Nstar @ observed CV"=8,"N Sampled"=19))+
facet_wrap(c("REGION","ISLAND","Stratum"),scales="free",ncol=3)+
geom_hline(yintercept = RefCV,color="purple",lty=2)+
geom_hline(yintercept = RefCV2,color="gold",lty=2)+
geom_vline(aes(xintercept = SDxA_ALLOC_2.5_MAN ),color="black",data=STR_OSNA)+
geom_text(aes(x = SDxA_ALLOC_2.5_MAN+5,y=RefCV+5,label=SDxA_ALLOC_2.5_MAN),color="gray",data=STR_OSNA)+
scale_x_log10(limits=c(1,30),breaks=c(2:12,15,20,25,30))+theme_bw()+
scale_y_log10()+theme_bw()+
ylab("Co. of Variation: Adult Colony Density")+
xlab("Nstar - Optimal Number of Sites for given CV target")+
ggtitle(paste0("Nstar Analysis - Strata Scale, Mean of Total and 4 Target Genera"))
sc=1.25
ggsave(plot = NstarPlots_STR,
filename = paste0("./NCRMP2024_StrataNstar_By_Island/NstarPlots_TargetGenera_withNeyman_NCRMP24_",uI$ISLAND[i],"_20240221.jpg"),
width=sc*11,height=sc*8.5)
}
DF_str25=DF_strata. %>% filter(Target_CV==25) %>% select(REGION,ISLAND,SECTOR,Stratum,Nstar)
OSNA.nstar=Old_Style_Neyman_Allocation %>%
left_join(DF_str25,by=join_by(REGION,ISLAND,SEC_NAME==SECTOR,Stratum)) %>%
rename(Nstar_25=Nstar)
write.csv(x = OSNA.nstar,file = paste0("./NCRMP24_BOATDAYS_Allocation_",Sys.Date(),"_MHI_NWHI_Manual_Nstar25.csv"))
rm(list=ls())
rm(list=ls())
library(sf)
library(mapview)
moku=st_read("T:/Benthic/Data/Data Requests/KirstenOleson_LouisCha/Moku_Marine/Moku_marine.shp")
mapview(moku)
getwd()
